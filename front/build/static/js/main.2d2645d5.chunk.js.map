{"version":3,"sources":["components/addExpense/addExpense.module.scss","components/layout/layout.module.scss","reportWebVitals.ts","components/login/actions.ts","components/login/reducers.ts","components/expenseItemsList/actions.ts","components/expenseItemsList/reducer.ts","app/commonFN.ts","components/expenseGroupList/actions.ts","components/expenseGroupList/reducer.ts","app/reducers.ts","app/sagas.js","app/store.js","app/config.ts","app/hooks.ts","app/service.ts","components/login/login.tsx","components/login/service.ts","components/expenseGroupList/expenseGroupList.tsx","components/expenseItemsList/expenseItemsList.tsx","components/addExpense/addExpense.tsx","components/layout/layout.tsx","components/expenseGroupList/service.ts","components/expenseItemsList/service.ts","App.tsx","index.tsx","components/login/login.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AUTH_FETCH_START","AUTH_FETCH_FAIL","AUTH_FETCH_SUCCESS","actions","const","requestStepsAC","fetchStart","type","fetchFail","err","payload","fetchSuccess","fetchedData","userId","userName","isAuthenticated","initialStateAuth","request","error","message","EXPENSE_ITEMS_LIST_FETCH_START","EXPENSE_ITEMS_LIST_FETCH_FAIL","EXPENSE_ITEMS_LIST_FETCH_SUCCESS","EXPENSE_ITEM_SELECTED","itemsArray","otherActionCreators","expenseItemSelectedAC","id","selectedId","initialState","expenseList","selectedExpense","isNumeric","n","isNaN","parseFloat","isFinite","baseActionName","getSuccessPayload","start","toUpperCase","fail","success","configureFetchActions","EXPENSE_GROUP_SELECTED","expenseGroupSelectedAC","expenseGroupFetchReducer","startStateChange","state","successStateChange","action","console","log","configureFetchReducer","expenseGroup","selectedGroup","reducer","combineReducers","auth","clone","setStep","expenseItemsList","name","filter","item","expenseGroupList","helloSaga","incrementAsync","watchIncrementAsync","rootSaga","delay","ms","Promise","res","setTimeout","call","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","config","backURL","useAppDispatch","useDispatch","useAppSelector","useSelector","appDispatch","dispatch","loadURL","relativePath","fetchOptions","requestSteps","fetch","ok","json","Error","status","statusText","JSON","parse","catch","Login","useState","value","setValue","handleBtnPress","btnArray","display","displayIcon","ArrowLeftOutlined","substring","length","SendOutlined","userString","method","headers","body","stringify","userCode","errorMessage","className","styles","main","container","warningWrapper","title","inputControlWrapper","readOnly","inputControl","btnContainer","map","shape","onClick","btn","disabled","size","spinier","ExpenseGroupList","list","def","obsolete","defaultSelection","Array","isArray","Group","optionType","buttonStyle","defaultValue","style","flexWrap","justifyContent","onChange","e","target","Button","Panel","Collapse","ExpenseItemsList","list1","oftenUsed","list2","renderList","lst","margin","minWidth","textAlign","width","header","AddExpense","dateFormatList","selectedExpenseId","selectedExpenseName","selectedExpenseGroup","Date","expenseDat","setExpenseDat","expenseSum","setExpenseSum","expenseComment","setExpenseComment","isStart","isFail","isSuccess","errMessage","submitProcess","setSubmitProcess","isOkToSubmit","useEffect","fetchURL","expenseGroupId","expenseId","expenseDate","moment","mode","inputReadOnly","format","year","month","date","prefix","suffix","placeholder","v","autoSize","showIcon","icon","CheckOutlined","Header","Layout","Content","Footer","AppLayout","theme","defaultSelectedKeys","Item","PlusOutlined","CalendarOutlined","LogoutOutlined","padding","layout_content","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d2645d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinier\":\"addExpense_spinier__35SuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout_content\":\"layout_layout_content__2Nu44\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type { TRequestActions } from '../../app/commonTypes';\r\n\r\nconst AUTH_FETCH_START = 'AUTH_FETCH_START';\r\nconst AUTH_FETCH_FAIL = 'AUTH_FETCH_FAIL';\r\nconst AUTH_FETCH_SUCCESS = 'AUTH_FETCH_SUCCESS';\r\n\r\nexport interface TAuthLoginPayload {\r\n  userId: number|null,\r\n  userName: string|null,\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport interface TAuthLoginAction {\r\n  type: string,\r\n  payload: TAuthLoginPayload | string\r\n}\r\n\r\nfunction authFetchStartAC(){\r\n  return ({\r\n    type: AUTH_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction authFetchFailAC(err: {message: string}){\r\n  return ({\r\n    type: AUTH_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction authFetchSuccessAC( fetchedData: any ) {\r\n  let payload = {};\r\n  if (fetchedData.userId>0) {\r\n    payload = {\r\n      userId: fetchedData.userId,\r\n      userName: fetchedData.userName,\r\n      isAuthenticated: true,\r\n    }\r\n  }\r\n\r\n  return ({\r\n    type: AUTH_FETCH_SUCCESS,\r\n    payload\r\n  })\r\n}\r\n\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n} = {\r\n  const: {\r\n    AUTH_FETCH_START,\r\n    AUTH_FETCH_FAIL,\r\n    AUTH_FETCH_SUCCESS,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: authFetchStartAC,\r\n    fetchFail: authFetchFailAC,\r\n    fetchSuccess: authFetchSuccessAC,\r\n  }\r\n}\r\n","\r\nimport { actions, TAuthLoginPayload, TAuthLoginAction} from './actions';\r\nimport { TRequestState } from '../../app/commonTypes';\r\n\r\n\r\ninterface TAuthStore extends TAuthLoginPayload {\r\n  request: TRequestState,\r\n}\r\n\r\nconst initialStateAuth: TAuthStore = {\r\n  userId: null,\r\n  userName: null,\r\n  isAuthenticated: false,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function authReducer(state: TAuthStore = initialStateAuth, action: any ):TAuthStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: {...state.request.error}\r\n    },\r\n  };\r\n\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.userId = null;\r\n      clone.userName = null;\r\n      clone.isAuthenticated = false;\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case actions.const.AUTH_FETCH_START: {\r\n      setStep(true, false, false);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n\r\n      clone.request.error = {message: action.payload.message};\r\n      console.log(clone);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n\r\n      clone.userId = (action.payload.isAuthenticated) ? action.payload.userId: null;\r\n      clone.userName = (action.payload.isAuthenticated) ? action.payload.userName: null;\r\n      clone.isAuthenticated = action.payload?.isAuthenticated || false;\r\n\r\n      return clone;\r\n    }\r\n    default:\r\n\r\n      //return clone;\r\n      return state;\r\n  }\r\n}\r\n","import type { TRequestActions } from '../../app/commonTypes';\r\n\r\nconst EXPENSE_ITEMS_LIST_FETCH_START = 'EXPENSE_ITEMS_LIST_FETCH_START';\r\nconst EXPENSE_ITEMS_LIST_FETCH_FAIL = 'EXPENSE_ITEMS_LIST_FETCH_FAIL';\r\nconst EXPENSE_ITEMS_LIST_FETCH_SUCCESS = 'EXPENSE_ITEMS_LIST_FETCH_SUCCESS';\r\nconst EXPENSE_ITEM_SELECTED = 'EXPENSE_ITEM_SELECTED';\r\n\r\nfunction fetchStartAC(){\r\n  return ({\r\n    type: EXPENSE_ITEMS_LIST_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction fetchFailAC( err: { message: string }) {\r\n  return ({\r\n    type: EXPENSE_ITEMS_LIST_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction fetchSuccessAC( fetchedData: any ){\r\n  return {\r\n    type: EXPENSE_ITEMS_LIST_FETCH_SUCCESS,\r\n    payload: {\r\n      itemsArray: fetchedData,\r\n    }\r\n  }\r\n}\r\n\r\nfunction expenseItemSelectedAC(id: number){\r\n  return {\r\n    type: EXPENSE_ITEM_SELECTED,\r\n    payload: {\r\n      selectedId: id,\r\n    }\r\n  }\r\n}\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n  otherActionCreators: any,\r\n} = {\r\n  const: {\r\n    EXPENSE_ITEMS_LIST_FETCH_START,\r\n    EXPENSE_ITEMS_LIST_FETCH_FAIL,\r\n    EXPENSE_ITEMS_LIST_FETCH_SUCCESS,\r\n    EXPENSE_ITEM_SELECTED,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: fetchStartAC,\r\n    fetchFail: fetchFailAC,\r\n    fetchSuccess: fetchSuccessAC,\r\n  },\r\n  otherActionCreators: {\r\n    expenseItemSelectedAC,\r\n  }\r\n}","import { actions } from './actions';\r\nimport { TRequestState, TExpenseItem } from '../../app/commonTypes';\r\n\r\ninterface TStore {\r\n  expenseList: TExpenseItem [],\r\n  selectedExpense: {\r\n    id: number,\r\n    name: string,\r\n  } | null\r\n  request: TRequestState\r\n}\r\n\r\nconst initialState: TStore = {\r\n  expenseList: [],\r\n  selectedExpense: null,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function expenseItemsListReducer(state: TStore = initialState, action: any):TStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: { ...state.request.error }\r\n    },\r\n  };\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.expenseList = [];\r\n    }\r\n  }\r\n\r\n  switch(action.type) {\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_START: {\r\n      setStep(true, false, false);\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n      clone.request.error = { message: action.payload.message }\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n      clone.expenseList = [...action.payload.itemsArray];\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEM_SELECTED: {\r\n      clone.selectedExpense = {\r\n        id: action.payload.selectedId,\r\n        name: clone.expenseList.filter((item)=>item.id===action.payload.selectedId)[0].name,\r\n      }\r\n      return clone;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\nimport { TActions } from './commonTypes';\r\n\r\nexport function isNumeric(n: any) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n\r\nexport function configureFetchActions(\r\n    baseActionName:string,\r\n    getSuccessPayload: (fetchedData: any)=>any)\r\n  {\r\n  const start: string = `${baseActionName.toUpperCase()}_FETCH_START`;\r\n  const fail: string = `${baseActionName.toUpperCase()}_FETCH_FAIL`;\r\n  const success: string = `${baseActionName.toUpperCase()}_FETCH_SUCCESS`;\r\n\r\n  const actions: TActions = {\r\n    const: {\r\n      start,\r\n      fail,\r\n      success,\r\n    },\r\n    requestStepsAC: {\r\n      fetchStart:() => ({\r\n          type: actions.const.start,\r\n      }),\r\n      fetchFail:(err: { message: string }) => ({\r\n        type: actions.const.fail,\r\n        payload: err,\r\n      }),\r\n      fetchSuccess:( fetchedData: any ) => ({\r\n        type: actions.const.success,\r\n        payload: getSuccessPayload(fetchedData)\r\n      }),\r\n    }\r\n  }\r\n\r\n  return actions;\r\n}\r\n\r\nexport function configureFetchReducer({\r\n    actions,\r\n    initialState,\r\n    startStateChange = (state:any)=>state,\r\n    successStateChange = (state:any)=>state\r\n  } : {\r\n    actions: TActions,\r\n    initialState: any,\r\n    startStateChange?: (state:any)=>any,\r\n    successStateChange?: (state:any, payload: any)=>any\r\n  }\r\n  ) {\r\n\r\n    return function (\r\n      state = initialState,\r\n      action: any\r\n    ){\r\n      switch(action.type) {\r\n        case actions.const.start: {\r\n          return startStateChange({\r\n            ...state,\r\n            ...{\r\n              request:{\r\n                fetchStart: true,\r\n                fetchFail: false,\r\n                fetchSuccess: false,\r\n                error: {\r\n                  message:'',\r\n                }}\r\n              }\r\n          })\r\n        }\r\n        case actions.const.fail: {\r\n          console.log('reducer', actions.const.fail);\r\n          return {\r\n            ...state,\r\n            ...{\r\n              request:{\r\n                fetchStart: false,\r\n                fetchFail: true,\r\n                fetchSuccess: false,\r\n                error: {\r\n                  message: action.payload.message,\r\n                }}\r\n              }\r\n          }\r\n        }\r\n        case actions.const.success: {\r\n          return successStateChange({\r\n            ...state,\r\n            ...{\r\n              request:{\r\n                fetchStart: false,\r\n                fetchFail: false,\r\n                fetchSuccess: true,\r\n                error: {\r\n                  message: '',\r\n                }}\r\n              }\r\n          }, action.payload)\r\n        }\r\n        default:\r\n          return state;\r\n      }\r\n  }\r\n}","import { configureFetchActions } from '../../app/commonFN';\r\nimport { TActions } from '../../app/commonTypes';\r\n\r\ninterface TExpActions extends TActions {\r\n  otherActionCreators?: any\r\n}\r\n\r\nconst actions: TExpActions = configureFetchActions(\r\n  'EXPENSE_GROUPS_LIST',\r\n  (fetchedData:any)=>fetchedData\r\n);\r\n\r\nactions.const.EXPENSE_GROUP_SELECTED = 'EXPENSE_GROUP_SELECTED';\r\nactions.otherActionCreators = {\r\n  expenseGroupSelectedAC: (id: number) => {\r\n    return {\r\n      type: actions.const.EXPENSE_GROUP_SELECTED,\r\n      payload: {\r\n        selectedId: id,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { actions };","import { actions } from './actions';\r\nimport { configureFetchReducer } from '../../app/commonFN';\r\nimport { TRequestState, TExpenseGroupItem } from '../../app/commonTypes';\r\n\r\ninterface TStore {\r\n  expenseGroup: TExpenseGroupItem [],\r\n  selectedGroup: {\r\n    id: number,\r\n    name: string,\r\n  } | null\r\n  request: TRequestState\r\n}\r\n\r\nconst initialState: TStore = {\r\n  expenseGroup:[],\r\n  selectedGroup: null,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nconst expenseGroupFetchReducer = configureFetchReducer(\r\n  {\r\n    actions,\r\n    initialState,\r\n    successStateChange:(state:TStore, payload: TExpenseGroupItem []) => {\r\n      state.expenseGroup = payload;\r\n      return state;\r\n    }\r\n  }\r\n);\r\n\r\nfunction expenseGroupListReducer (state:TStore, action:any) {\r\n  switch(action.type) {\r\n    case actions.const.EXPENSE_GROUP_SELECTED: {\r\n      return {\r\n        ...state,\r\n        ...{ selectedGroup: {\r\n              id: action.payload.selectedId,\r\n              name:state.expenseGroup.filter((item)=>item.id===action.payload.selectedId)[0].name\r\n            }\r\n          }\r\n      }\r\n    }\r\n    default:\r\n      return expenseGroupFetchReducer(state, action)\r\n  }\r\n}\r\n\r\nexport { expenseGroupListReducer };\r\n","\r\nimport { combineReducers } from 'redux';\r\nimport { authReducer } from './../components/login/reducers';\r\nimport { expenseItemsListReducer } from './../components/expenseItemsList/reducer';\r\nimport { expenseGroupListReducer } from './../components/expenseGroupList/reducer';\r\n\r\nexport const reducer = combineReducers({\r\n  auth: authReducer,\r\n  expenseItemsList: expenseItemsListReducer,\r\n  expenseGroupList: expenseGroupListReducer,\r\n})","import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects';\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\n\r\nfunction* helloSaga() {\r\n  console.log('Hello Sagas!')\r\n}\r\n\r\nfunction* incrementAsync() {\r\n  yield call(delay, 1000);\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nfunction* watchIncrementAsync() {\r\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    helloSaga(),\r\n    watchIncrementAsync()\r\n  ])\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reducer } from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\n// export const store = createStore(\r\n//   reducer,\r\n//   compose(\r\n//     applyMiddleware(sagaMiddleware),\r\n//     window?.__REDUX_DEVTOOLS_EXTENSION__ && window?.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n// );\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\n\r\n","const config = {\r\n  //backURL: 'http://localhost:3100/budget',\r\n  backURL: 'https://michael-916310-budget-back.herokuapp.com/budget',\r\n}\r\n\r\nexport default config;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { store } from './store';\r\n\r\ntype TRootState = ReturnType<typeof store.getState>;\r\ntype TAppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<TAppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = useSelector;\r\nexport const appDispatch:TAppDispatch = store.dispatch;\r\n","import config from './config';\r\nimport type { TRequestActions } from './commonTypes';\r\nimport { appDispatch } from './hooks';\r\n\r\nexport function fetchURL(relativePath: string, fetchOptions:{}={}){\r\n  return fetch(config.backURL + relativePath, fetchOptions)\r\n    .then((res)=>{\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(`${res.status}: ${res.statusText}`);\r\n      }\r\n    })\r\n}\r\n\r\nexport function loadURL(\r\n    relativePath: string,\r\n    fetchOptions:{}={},\r\n    requestSteps: TRequestActions): void {\r\n\r\n  appDispatch(requestSteps.fetchStart());\r\n  fetch(config.backURL + relativePath, fetchOptions)\r\n    .then((res)=>{\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(`${res.status}: ${res.statusText}`);\r\n      }\r\n    })\r\n    .then((res)=>{\r\n      appDispatch(requestSteps.fetchSuccess(JSON.parse(res)));\r\n    }).catch((err)=>{\r\n      appDispatch(requestSteps.fetchFail({message: err.message}));\r\n    })\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Input, Button, Spin, Result } from 'antd';\r\nimport { ArrowLeftOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './login.module.scss';\r\nimport { checkLogin } from './service';\r\nimport { useAppSelector } from './../../app/hooks';\r\n\r\ntype btnType = {\r\n  display?: string;\r\n  displayIcon?: any;\r\n  value: string;\r\n  action: ((item: btnType)=>void) | (()=>void);\r\n}\r\n\r\n\r\n\r\nexport default function Login(){\r\n  const [value, setValue] = useState('');\r\n\r\n  function handleBtnPress(item:btnType) {\r\n    setValue(`${value}${item.value}`);\r\n  }\r\n\r\n  function backspaceBtnPress() {\r\n    setValue(value.substring(0,value.length-1));\r\n  }\r\n\r\n  const btnArray:btnType[]=[\r\n    {display:'1', value:'1', action:handleBtnPress},\r\n    {display:'2', value:'2', action:handleBtnPress},\r\n    {display:'3', value:'3', action:handleBtnPress},\r\n    {display:'4', value:'4', action:handleBtnPress},\r\n    {display:'5', value:'5', action:handleBtnPress},\r\n    {display:'6', value:'6', action:handleBtnPress},\r\n    {display:'7', value:'7', action:handleBtnPress},\r\n    {display:'8', value:'8', action:handleBtnPress},\r\n    {display:'9', value:'9', action:handleBtnPress},\r\n    {display:'0', value:'0', action:handleBtnPress},\r\n    {displayIcon:<ArrowLeftOutlined/>, value:'backspace', action:backspaceBtnPress},\r\n    {displayIcon:<SendOutlined/>, value:'send', action:()=>{checkLogin(value)}},\r\n  ];\r\n\r\n\r\n  let fetchStart = useAppSelector((state)=>{return state.auth.request.fetchStart});\r\n  let fetchFail = useAppSelector((state)=>{return state.auth.request.fetchFail});\r\n  let errorMessage = useAppSelector((state)=>{return state.auth.request.error.message});\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <section className={styles.container}>\r\n        <article className={styles.warningWrapper}>\r\n          {fetchFail &&\r\n          <Result\r\n            status=\"warning\"\r\n            title={errorMessage}\r\n          />}\r\n        </article>\r\n        <article className={styles.inputControlWrapper}>\r\n          <Input\r\n            readOnly={true}\r\n            className={styles.inputControl}\r\n            value={value}/>\r\n        </article>\r\n        <article className={styles.btnContainer}>\r\n          {\r\n            btnArray.map((item) => (\r\n              <Button\r\n                key = {item.value}\r\n                shape='round'\r\n                onClick = {()=>{item.action(item)}}\r\n                className={styles.btn}\r\n                disabled = { fetchStart }\r\n              >\r\n                {(item.display) ? (item.display) : (item.displayIcon)}\r\n              </Button>\r\n              )\r\n            )\r\n          }\r\n        </article>\r\n      </section>\r\n      {fetchStart && <Spin size=\"large\" className={styles.spinier}/>}\r\n    </main>\r\n  )\r\n}","import { loadURL} from './../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function checkLogin( userString: string ): void {\r\n  loadURL(\r\n    '/user/check',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({userCode: userString})\r\n    },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { Radio } from 'antd';\r\n\r\nimport { useAppSelector, useAppDispatch } from './../../app/hooks';\r\nimport { TExpenseGroupItem } from './../../app/commonTypes';\r\nimport { actions } from './actions';\r\n\r\nexport function ExpenseGroupList(){\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  let list = useAppSelector((state)=>state.expenseGroupList.expenseGroup);\r\n  list = list.filter((item: TExpenseGroupItem) => !item.obsolete);\r\n  const def = list.filter((item: TExpenseGroupItem) => item.defaultSelection);\r\n\r\n  const selectedExpenseGroup = useAppSelector(( state ) => state.expenseGroupList.selectedGroup)\r\n  if (!selectedExpenseGroup) {\r\n    // При первой загрузку прокинем в стайт дефолтное значение\r\n    if (Array.isArray(def) && def.length > 0) {\r\n      dispatch(\r\n        actions.otherActionCreators.expenseGroupSelectedAC(def[0].id)\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Radio.Group\r\n      size=\"large\"\r\n      optionType=\"button\"\r\n      buttonStyle=\"outline\"\r\n      defaultValue = {((Array.isArray(def) && def.length > 0)? def[0].id:-1)}\r\n      style = {{display:'flex', flexWrap: 'wrap', justifyContent: 'center' }}\r\n      onChange = {(e)=>{\r\n        dispatch(\r\n          actions.otherActionCreators.expenseGroupSelectedAC(e.target.value)\r\n        )\r\n      }}\r\n    >\r\n      {list.map((item: {id: number, name: string}) => (\r\n          <Radio.Button\r\n            key = { item.id } value={item.id}\r\n          >\r\n            { item.name }\r\n        </Radio.Button>\r\n      ))}\r\n    </Radio.Group>\r\n  )\r\n}","import React from 'react';\r\nimport { Radio, Collapse } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport { useAppSelector, useAppDispatch } from './../../app/hooks';\r\n\r\nimport { TExpenseItem } from '../../app/commonTypes';\r\nimport { actions } from './actions';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction ExpenseItemsList(){\r\n\r\n  const list = useAppSelector((state: any)=>(state.expenseItemsList.expenseList));\r\n  const list1 = list.filter((item: TExpenseItem) => (item.oftenUsed > 0));\r\n  const list2 = list.filter((item: TExpenseItem) => (item.oftenUsed === 0));\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  function renderList(lst:[]){\r\n    return (\r\n      lst.map((item: any)=>{\r\n        return (\r\n          <Radio.Button\r\n            key = { item.id } value={item.id}\r\n            style = {{ margin: '1px', minWidth:'7rem' }}\r\n          >\r\n            { item.name }\r\n          </Radio.Button>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Radio.Group\r\n      //defaultValue=\"1\"\r\n      buttonStyle=\"solid\"\r\n      style = {{ textAlign: 'center', display:'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}\r\n      size=\"large\"\r\n      onChange = {(e)=>{\r\n        dispatch(\r\n          actions.otherActionCreators.expenseItemSelectedAC(e.target.value)\r\n        )\r\n      }}\r\n    >\r\n      {renderList(list1)}\r\n      <Collapse style ={{width:'100%'}}>\r\n        <Panel header=\"другие статьи\" key=\"1\">\r\n          <div style = {{ textAlign: 'center', display:'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n            {renderList(list2)}\r\n          </div>\r\n        </Panel>\r\n      </Collapse>\r\n    </Radio.Group>\r\n  )\r\n}\r\n\r\nexport {ExpenseItemsList};","import React, {useEffect, useState} from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Button, DatePicker, Divider, Input, Alert, Spin } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nimport { ExpenseGroupList } from './../expenseGroupList/expenseGroupList';\r\nimport { ExpenseItemsList } from './../expenseItemsList/expenseItemsList';\r\nimport { useAppSelector } from './../../app/hooks';\r\nimport { isNumeric } from '../../app/commonFN';\r\n\r\nimport { fetchURL } from './../../app/service';\r\n\r\nimport styles from './addExpense.module.scss';\r\n\r\n\r\nfunction AddExpense(){\r\n  const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\n  const selectedExpenseId = useAppSelector(( state ) => state.expenseItemsList.selectedExpense?.id);\r\n  const selectedExpenseName = useAppSelector(( state ) => state.expenseItemsList.selectedExpense?.name);\r\n  const selectedExpenseGroup = useAppSelector(( state ) => state.expenseGroupList.selectedGroup);\r\n\r\n  const [expenseDat, setExpenseDat] = useState(new Date());\r\n  const [expenseSum, setExpenseSum] = useState('');\r\n  const [expenseComment, setExpenseComment] = useState('');\r\n\r\n  const [submitProcess, setSubmitProcess] = useState({\r\n    isStart: false,\r\n    isFail: false,\r\n    isSuccess: false,\r\n    errMessage:'',\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    if (submitProcess.isStart) {\r\n      fetchURL(\r\n        '/expense/add',\r\n         {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({\r\n              expenseGroupId: selectedExpenseGroup.id,\r\n              expenseId: selectedExpenseId,\r\n              expenseSum: expenseSum,\r\n              expenseDate: expenseDat,\r\n              expenseComment: expenseComment\r\n            })\r\n          },\r\n      ).then((res)=>{\r\n        if (res.status>0) {\r\n          setExpenseSum('');\r\n          setSubmitProcess({isStart: false, isFail: false, isSuccess: true, errMessage:''});\r\n\r\n        } else {\r\n          setSubmitProcess({isStart: false, isFail: true, isSuccess: false, errMessage:res.message})\r\n        }\r\n      }).catch((err)=>{\r\n        setSubmitProcess({isStart: false, isFail: true, isSuccess: false, errMessage:err.message})\r\n      })\r\n    }\r\n  }, [submitProcess.isStart]);\r\n\r\n  function isOkToSubmit(){\r\n    return (\r\n      !!selectedExpenseGroup &&\r\n      (selectedExpenseGroup.id>0) &&\r\n      !!selectedExpenseId &&\r\n      isNumeric(expenseSum) && (+expenseSum !== 0) && (!!expenseDat)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ExpenseGroupList/>\r\n      <Divider/>\r\n\r\n      <ExpenseItemsList/>\r\n      <Divider/>\r\n\r\n      <DatePicker\r\n        defaultValue={moment(expenseDat, dateFormatList[0])}\r\n        size = \"large\"\r\n        mode = \"date\"\r\n        inputReadOnly = {true}\r\n        format={dateFormatList}\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = { moment(expenseDat, dateFormatList[0]) }\r\n        onChange = {(e) => {\r\n          if (e) {\r\n            setExpenseDat(new Date(e.year(), e.month(), e.date()));\r\n            }\r\n          }\r\n        }\r\n      />\r\n\r\n      <Input\r\n        prefix=\"₽\"\r\n        suffix=\"RUR\"\r\n        placeholder=\"сумма\"\r\n        size = \"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = {expenseSum}\r\n        onChange = {(e)=> {\r\n          const v = e.target.value;\r\n          if (isNumeric(v)) {\r\n            setExpenseSum(v);\r\n          }\r\n        }}\r\n      />\r\n\r\n      <TextArea\r\n        placeholder=\"коментарии\"\r\n        autoSize\r\n        size = \"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = {expenseComment}\r\n        onChange = {(e)=>{\r\n          setExpenseComment(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {submitProcess.isFail &&\r\n        <Alert message={submitProcess.errMessage} type=\"error\" showIcon />}\r\n\r\n      {submitProcess.isSuccess &&\r\n        <Alert message=\"Успешно сохранена\" type=\"success\" showIcon />}\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        icon={<CheckOutlined/>}\r\n        size=\"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        disabled ={!isOkToSubmit() || submitProcess.isStart}\r\n        onClick = {()=>{\r\n          setSubmitProcess({\r\n            isStart: true,\r\n            isFail: false,\r\n            isSuccess: false,\r\n            errMessage:'',\r\n          })\r\n         }}\r\n      >\r\n        { isOkToSubmit()\r\n          ? `${selectedExpenseName} (${selectedExpenseGroup.name}) : ${expenseSum}`\r\n          : ''\r\n        }\r\n      </Button>\r\n\r\n      {submitProcess.isStart &&\r\n        <Spin size=\"large\" className={styles.spinier}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {AddExpense};","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { CalendarOutlined, CheckOutlined, EditOutlined, ExportOutlined, LogoutOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { AddExpense } from './../addExpense/addExpense';\r\nimport styles from './layout.module.scss';\r\n\r\n\r\nconst {  Header, Content, Footer } = Layout;\r\n\r\nfunction AppLayout()  {\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"1\"><PlusOutlined/></Menu.Item>\r\n          <Menu.Item key=\"2\"><CalendarOutlined/></Menu.Item>\r\n          <Menu.Item key=\"3\"><LogoutOutlined/></Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: '0 5px' }}>\r\n        <div className={styles.layout_content}>\r\n          <AddExpense/>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Бюджет расходов</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport {AppLayout as Layout};","import { loadURL} from '../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function loadExpenseGroupList() {\r\n  loadURL(\r\n    '/references/expenseGroups',\r\n    { method: 'POST' },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}","import { loadURL} from '../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function loadExpenseItemsList() {\r\n  loadURL(\r\n    '/references/expenseItems',\r\n    { method: 'POST' },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { loadExpenseItemsList } from './components/expenseItemsList/service';\r\nimport { loadExpenseGroupList } from './components/expenseGroupList/service';\r\nimport Login from './components/login/login';\r\nimport { Layout } from './components/layout/layout';\r\n\r\nfunction App() {\r\n\r\n  const isAuthenticated = useSelector((state:any) => {return state.auth.isAuthenticated})\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && <Layout/>}\r\n      {!isAuthenticated && <Login/>}\r\n    </>\r\n  );\r\n}\r\n\r\nloadExpenseGroupList();\r\nloadExpenseItemsList();\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nimport {store} from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1_ZlM\",\"container\":\"login_container__36LK3\",\"warningWrapper\":\"login_warningWrapper__gzvxY\",\"inputControlWrapper\":\"login_inputControlWrapper__e5JuV\",\"inputControl\":\"login_inputControl__zjzzz\",\"btnContainer\":\"login_btnContainer__wsBcb\",\"btn\":\"login_btn__13-Rj\",\"spinier\":\"login_spinier__1p1pF\"};"],"sourceRoot":""}