{"version":3,"sources":["components/expenseList/expenseList.module.scss","components/addExpense/addExpense.module.scss","components/layout/layout.module.scss","reportWebVitals.ts","components/login/actions.ts","components/login/reducers.ts","components/expenseItemsList/actions.ts","components/expenseItemsList/reducer.ts","app/commonFN.ts","components/expenseGroupList/actions.ts","components/expenseGroupList/reducer.ts","components/layout/actions.ts","components/layout/reducer.ts","components/expenseList/actions.ts","app/commonTypes.ts","components/expenseList/reducer.ts","app/reducers.ts","app/sagas.js","app/store.js","app/config.ts","app/hooks.ts","app/service.ts","components/login/login.tsx","components/login/service.ts","components/expenseGroupList/expenseGroupList.tsx","components/expenseItemsList/expenseItemsList.tsx","components/addExpense/addExpense.tsx","components/expenseList/expenseList.tsx","components/expenseList/service.ts","components/layout/layout.tsx","components/expenseGroupList/service.ts","components/expenseItemsList/service.ts","App.tsx","index.tsx","components/login/login.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AUTH_FETCH_START","AUTH_FETCH_FAIL","AUTH_FETCH_SUCCESS","AUTH_LOGOUT","actions","const","requestStepsAC","fetchStart","type","fetchFail","err","payload","fetchSuccess","fetchedData","userId","userName","isAuthenticated","other","authLogoutAC","initialStateAuth","request","error","message","EXPENSE_ITEMS_LIST_FETCH_START","EXPENSE_ITEMS_LIST_FETCH_FAIL","EXPENSE_ITEMS_LIST_FETCH_SUCCESS","EXPENSE_ITEM_SELECTED","itemsArray","otherActionCreators","expenseItemSelectedAC","id","selectedId","initialState","expenseList","selectedExpense","isNumeric","n","isNaN","parseFloat","isFinite","configureFetchActions","baseActionName","getSuccessPayload","start","toUpperCase","fail","success","configureFetchReducer","startStateChange","state","successStateChange","action","console","log","EXPENSE_GROUP_SELECTED","expenseGroupSelectedAC","expenseGroupFetchReducer","expenseGroup","selectedGroup","MENU_ITEM_SELECTED","selectedIndex","actionsDelete","EXPENSE_LIST_DELETE","deleteAC","deletedId","requestStateInitial","expenseListFetchReducer","initialStateDelete","status","reducer","combineReducers","auth","clone","setStep","expenseItemsList","name","filter","item","expenseGroupList","menu","helloSaga","incrementAsync","watchIncrementAsync","rootSaga","delay","ms","Promise","res","setTimeout","call","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","config","backURL","useAppDispatch","useDispatch","useAppSelector","useSelector","appDispatch","dispatch","loadURLWithSteps","relativePath","fetchOptions","requestSteps","fetch","ok","json","Error","statusText","JSON","parse","catch","Login","useState","value","setValue","handleBtnPress","btnArray","display","displayIcon","ArrowLeftOutlined","substring","length","SendOutlined","userString","method","headers","body","stringify","userCode","errorMessage","className","styles","main","container","warningWrapper","title","inputControlWrapper","readOnly","inputControl","btnContainer","map","shape","onClick","btn","disabled","size","spinier","ExpenseGroupList","list","def","obsolete","defaultSelection","Array","isArray","Group","optionType","buttonStyle","defaultValue","style","flexWrap","justifyContent","onChange","e","target","Button","Panel","Collapse","ExpenseItemsList","list1","oftenUsed","list2","renderList","lst","margin","minWidth","textAlign","width","header","AddExpense","dateFormatList","selectedExpenseId","selectedExpenseName","selectedExpenseGroup","Date","expenseDat","setExpenseDat","expenseSum","setExpenseSum","expenseComment","setExpenseComment","isStart","isFail","isSuccess","errMessage","submitProcess","setSubmitProcess","isOkToSubmit","useEffect","fetchURL","expenseGroupId","expenseId","expenseDate","moment","mode","inputReadOnly","format","year","month","date","prefix","suffix","placeholder","v","autoSize","showIcon","icon","CheckOutlined","ExpenseList","React","deleteConfirmIndex","setDeleteConfirmIndex","itemContainer","bordered","column","xl","sm","xs","description","extra","expenseName","amount","day","visible","cancelText","cancelButtonProps","okText","okButtonProps","onCancel","onConfirm","buttonDelete","DeleteOutlined","Item","label","groupName","period","span","Header","Layout","Content","Footer","AppLayout","selectedItem","theme","selectedKeys","onSelect","key","keyPath","domEvent","PlusOutlined","CalendarOutlined","LogoutOutlined","padding","layout_content","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7359a7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"expenseList_itemContainer__3nIar\",\"description\":\"expenseList_description__2Vvk5\",\"buttonDelete\":\"expenseList_buttonDelete__39kxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinier\":\"addExpense_spinier__35SuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout_content\":\"layout_layout_content__2Nu44\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type { TRequestActions } from '../../app/commonTypes';\r\n\r\nconst AUTH_FETCH_START = 'AUTH_FETCH_START';\r\nconst AUTH_FETCH_FAIL = 'AUTH_FETCH_FAIL';\r\nconst AUTH_FETCH_SUCCESS = 'AUTH_FETCH_SUCCESS';\r\nconst AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport interface TAuthLoginPayload {\r\n  userId: number|null,\r\n  userName: string|null,\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport interface TAuthLoginAction {\r\n  type: string,\r\n  payload: TAuthLoginPayload | string\r\n}\r\n\r\nfunction authFetchStartAC(){\r\n  return ({\r\n    type: AUTH_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction authFetchFailAC(err: {message: string}){\r\n  return ({\r\n    type: AUTH_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction authFetchSuccessAC( fetchedData: any ) {\r\n  let payload = {};\r\n  if (fetchedData.userId>0) {\r\n    payload = {\r\n      userId: fetchedData.userId,\r\n      userName: fetchedData.userName,\r\n      isAuthenticated: true,\r\n    }\r\n  }\r\n\r\n  return ({\r\n    type: AUTH_FETCH_SUCCESS,\r\n    payload\r\n  })\r\n}\r\n\r\nexport function authLogoutAC(){\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  }\r\n}\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n  other: any,\r\n} = {\r\n  const: {\r\n    AUTH_FETCH_START,\r\n    AUTH_FETCH_FAIL,\r\n    AUTH_FETCH_SUCCESS,\r\n    AUTH_LOGOUT,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: authFetchStartAC,\r\n    fetchFail: authFetchFailAC,\r\n    fetchSuccess: authFetchSuccessAC,\r\n  },\r\n  other: {\r\n    authLogoutAC,\r\n  }\r\n}\r\n","\r\nimport { actions, TAuthLoginPayload} from './actions';\r\nimport { TRequestState } from '../../app/commonTypes';\r\n\r\ninterface TAuthStore extends TAuthLoginPayload {\r\n  request: TRequestState,\r\n}\r\n\r\nconst initialStateAuth: TAuthStore = {\r\n  userId: null,\r\n  userName: null,\r\n  isAuthenticated: false,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function authReducer(state: TAuthStore = initialStateAuth, action: any ):TAuthStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: {...state.request.error}\r\n    },\r\n  };\r\n\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.userId = null;\r\n      clone.userName = null;\r\n      clone.isAuthenticated = false;\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case actions.const.AUTH_FETCH_START: {\r\n      setStep(true, false, false);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n\r\n      clone.request.error = {message: action.payload.message};\r\n      console.log(clone);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n\r\n      clone.userId = (action.payload.isAuthenticated) ? action.payload.userId: null;\r\n      clone.userName = (action.payload.isAuthenticated) ? action.payload.userName: null;\r\n      clone.isAuthenticated = action.payload?.isAuthenticated || false;\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_LOGOUT: {\r\n      clone.isAuthenticated = false;\r\n      clone.userName = null;\r\n      clone.userId = null;\r\n      return clone;\r\n    }\r\n    default:\r\n\r\n      return state;\r\n  }\r\n}\r\n","import type { TRequestActions } from '../../app/commonTypes';\r\n\r\nconst EXPENSE_ITEMS_LIST_FETCH_START = 'EXPENSE_ITEMS_LIST_FETCH_START';\r\nconst EXPENSE_ITEMS_LIST_FETCH_FAIL = 'EXPENSE_ITEMS_LIST_FETCH_FAIL';\r\nconst EXPENSE_ITEMS_LIST_FETCH_SUCCESS = 'EXPENSE_ITEMS_LIST_FETCH_SUCCESS';\r\nconst EXPENSE_ITEM_SELECTED = 'EXPENSE_ITEM_SELECTED';\r\n\r\nfunction fetchStartAC(){\r\n  return ({\r\n    type: EXPENSE_ITEMS_LIST_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction fetchFailAC( err: { message: string }) {\r\n  return ({\r\n    type: EXPENSE_ITEMS_LIST_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction fetchSuccessAC( fetchedData: any ){\r\n  return {\r\n    type: EXPENSE_ITEMS_LIST_FETCH_SUCCESS,\r\n    payload: {\r\n      itemsArray: fetchedData,\r\n    }\r\n  }\r\n}\r\n\r\nfunction expenseItemSelectedAC(id: number){\r\n  return {\r\n    type: EXPENSE_ITEM_SELECTED,\r\n    payload: {\r\n      selectedId: id,\r\n    }\r\n  }\r\n}\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n  otherActionCreators: any,\r\n} = {\r\n  const: {\r\n    EXPENSE_ITEMS_LIST_FETCH_START,\r\n    EXPENSE_ITEMS_LIST_FETCH_FAIL,\r\n    EXPENSE_ITEMS_LIST_FETCH_SUCCESS,\r\n    EXPENSE_ITEM_SELECTED,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: fetchStartAC,\r\n    fetchFail: fetchFailAC,\r\n    fetchSuccess: fetchSuccessAC,\r\n  },\r\n  otherActionCreators: {\r\n    expenseItemSelectedAC,\r\n  }\r\n}","import { actions } from './actions';\r\nimport { TRequestState, TExpenseItem } from '../../app/commonTypes';\r\n\r\ninterface TStore {\r\n  expenseList: TExpenseItem [],\r\n  selectedExpense: {\r\n    id: number,\r\n    name: string,\r\n  } | null\r\n  request: TRequestState\r\n}\r\n\r\nconst initialState: TStore = {\r\n  expenseList: [],\r\n  selectedExpense: null,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function expenseItemsListReducer(state: TStore = initialState, action: any):TStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: { ...state.request.error }\r\n    },\r\n  };\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.expenseList = [];\r\n    }\r\n  }\r\n\r\n  switch(action.type) {\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_START: {\r\n      setStep(true, false, false);\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n      clone.request.error = { message: action.payload.message }\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n      clone.expenseList = [...action.payload.itemsArray];\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEM_SELECTED: {\r\n      clone.selectedExpense = {\r\n        id: action.payload.selectedId,\r\n        name: clone.expenseList.filter((item)=>item.id===action.payload.selectedId)[0].name,\r\n      }\r\n      return clone;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\nimport { TActions } from './commonTypes';\r\n\r\nexport function isNumeric(n: any) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\n\r\nexport function configureFetchActions(\r\n    baseActionName:string,\r\n    getSuccessPayload: (fetchedData: any)=>any)\r\n  {\r\n  const start: string = `${baseActionName.toUpperCase()}_FETCH_START`;\r\n  const fail: string = `${baseActionName.toUpperCase()}_FETCH_FAIL`;\r\n  const success: string = `${baseActionName.toUpperCase()}_FETCH_SUCCESS`;\r\n\r\n  const actions: TActions = {\r\n    const: {\r\n      start,\r\n      fail,\r\n      success,\r\n    },\r\n    requestStepsAC: {\r\n      fetchStart:() => ({\r\n          type: actions.const.start,\r\n      }),\r\n      fetchFail:(err: { message: string }) => ({\r\n        type: actions.const.fail,\r\n        payload: err,\r\n      }),\r\n      fetchSuccess:( fetchedData: any ) => ({\r\n        type: actions.const.success,\r\n        payload: getSuccessPayload(fetchedData)\r\n      }),\r\n    }\r\n  }\r\n\r\n  return actions;\r\n}\r\n\r\nexport function configureFetchReducer({\r\n    actions,\r\n    initialState,\r\n    startStateChange = (state:any)=>state,\r\n    successStateChange = (state:any)=>state\r\n  } : {\r\n    actions: TActions,\r\n    initialState: any,\r\n    startStateChange?: (state:any)=>any,\r\n    successStateChange?: (state:any, payload: any)=>any\r\n  }\r\n  ) {\r\n\r\n    return function (\r\n      state = initialState,\r\n      action: any\r\n    ){\r\n      switch(action.type) {\r\n        case actions.const.start: {\r\n          return startStateChange({\r\n            ...state,\r\n            ...{\r\n              request:{\r\n                fetchStart: true,\r\n                fetchFail: false,\r\n                fetchSuccess: false,\r\n                error: {\r\n                  message:'',\r\n                }}\r\n              }\r\n          })\r\n        }\r\n        case actions.const.fail: {\r\n          console.log('reducer', actions.const.fail);\r\n          return {\r\n            ...state,\r\n            ...{\r\n              request:{\r\n                fetchStart: false,\r\n                fetchFail: true,\r\n                fetchSuccess: false,\r\n                error: {\r\n                  message: action.payload.message,\r\n                }}\r\n              }\r\n          }\r\n        }\r\n        case actions.const.success: {\r\n          return successStateChange({\r\n            ...state,\r\n            ...{\r\n              request:{\r\n                fetchStart: false,\r\n                fetchFail: false,\r\n                fetchSuccess: true,\r\n                error: {\r\n                  message: '',\r\n                }}\r\n              }\r\n          }, action.payload)\r\n        }\r\n        default:\r\n          return state;\r\n      }\r\n  }\r\n}","import { configureFetchActions } from '../../app/commonFN';\r\nimport { TOtherActions } from '../../app/commonTypes';\r\n\r\nconst actions: TOtherActions = configureFetchActions(\r\n  'EXPENSE_GROUPS_LIST',\r\n  (fetchedData:any)=>fetchedData\r\n);\r\n\r\nactions.const.EXPENSE_GROUP_SELECTED = 'EXPENSE_GROUP_SELECTED';\r\nactions.otherActionCreators = {\r\n  expenseGroupSelectedAC: (id: number) => {\r\n    return {\r\n      type: actions.const.EXPENSE_GROUP_SELECTED,\r\n      payload: {\r\n        selectedId: id,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { actions };","import { actions } from './actions';\r\nimport { configureFetchReducer } from '../../app/commonFN';\r\nimport { TRequestState, TExpenseGroupItem } from '../../app/commonTypes';\r\n\r\ninterface TStore {\r\n  expenseGroup: TExpenseGroupItem [],\r\n  selectedGroup: {\r\n    id: number,\r\n    name: string,\r\n  } | null\r\n  request: TRequestState\r\n}\r\n\r\nconst initialState: TStore = {\r\n  expenseGroup:[],\r\n  selectedGroup: null,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nconst expenseGroupFetchReducer = configureFetchReducer(\r\n  {\r\n    actions,\r\n    initialState,\r\n    successStateChange:(state:TStore, payload: TExpenseGroupItem []) => {\r\n      state.expenseGroup = payload;\r\n      return state;\r\n    }\r\n  }\r\n);\r\n\r\nfunction expenseGroupListReducer (state:TStore, action:any) {\r\n  switch(action.type) {\r\n    case actions.const.EXPENSE_GROUP_SELECTED: {\r\n      return {\r\n        ...state,\r\n        ...{ selectedGroup: {\r\n              id: action.payload.selectedId,\r\n              name:state.expenseGroup.filter((item)=>item.id===action.payload.selectedId)[0].name\r\n            }\r\n          }\r\n      }\r\n    }\r\n    default:\r\n      return expenseGroupFetchReducer(state, action)\r\n  }\r\n}\r\n\r\nexport { expenseGroupListReducer };\r\n","export const MENU_ITEM_SELECTED = 'MENU_ITEM_SELECTED';\r\n\r\nexport function selectMenuAC(index: string){\r\n  return {\r\n    type: MENU_ITEM_SELECTED,\r\n    payload: index,\r\n  }\r\n}","import { MENU_ITEM_SELECTED } from './actions';\r\n\r\ninterface TStore {\r\n  selectedIndex: string,\r\n}\r\n\r\nconst initialState: TStore = {\r\n  selectedIndex: '1'\r\n}\r\n\r\nexport function menuReducer(\r\n  state = initialState,\r\n  action: {type: string, payload:string})\r\n  {\r\n  switch (action.type) {\r\n    case MENU_ITEM_SELECTED: {\r\n      return {\r\n        selectedIndex: action.payload,\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { configureFetchActions } from './../../app/commonFN';\r\nimport { TOtherActions } from './.././../app/commonTypes';\r\n\r\n// =======================================\r\n// для списка расходов\r\nconst actions = configureFetchActions(\r\n  'EXPENSE_LIST',\r\n  (fetchedData:any)=>fetchedData\r\n)\r\n\r\n// =============================================\r\n// для удаления расхода из списка\r\nconst actionsDelete:TOtherActions = configureFetchActions(\r\n  'EXPENSE_LIST_DELETE',\r\n  (fetchedData:any)=>fetchedData\r\n)\r\n\r\nactionsDelete.const.EXPENSE_LIST_DELETE = 'EXPENSE_LIST_DELETE';\r\nactionsDelete.otherActionCreators = {\r\n  deleteAC: (id: number) => {\r\n    return {\r\n      type: actionsDelete.const.EXPENSE_LIST_DELETE,\r\n      payload: {\r\n        deletedId: id,\r\n      }\r\n    }\r\n  }\r\n}\r\nexport { actions, actionsDelete };","export interface TRequestState {\r\n  fetchStart: boolean,\r\n  fetchFail: boolean,\r\n  error: {\r\n    message: string\r\n  },\r\n  fetchSuccess: boolean,\r\n}\r\n\r\nexport const requestStateInitial:TRequestState = {\r\n  fetchStart: false,\r\n  fetchFail: false,\r\n  error: {\r\n    message: '',\r\n  },\r\n  fetchSuccess: false,\r\n}\r\n\r\nexport interface TRequestActions {\r\n  fetchStart: ()=>void,\r\n  fetchFail: (error: {message: string})=>void,\r\n  fetchSuccess: (fetchData: any)=>void,\r\n}\r\n\r\nexport interface TActions {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n}\r\n\r\nexport interface TExpenseItem {\r\n  id: number,\r\n  name: string,\r\n  oftenUsed: number,\r\n}\r\n\r\nexport interface TExpenseGroupItem {\r\n  id: number,\r\n  name: string,\r\n  obsolete:number,\r\n  defaultSelection: number,\r\n}\r\n\r\nexport interface TOtherActions extends TActions {\r\n  otherActionCreators?: any\r\n}\r\n","import { actions, actionsDelete } from './actions';\r\nimport { configureFetchReducer } from './../../app/commonFN';\r\nimport { TRequestState, requestStateInitial } from './../../app/commonTypes';\r\n\r\nexport interface IExpenseListItem {\r\n  id: number,\r\n  period: string,\r\n  day: number,\r\n  groupName: string,\r\n  expenseName: string,\r\n  description: string,\r\n  amount: number,\r\n}\r\n\r\ninterface TStore {\r\n  expenseList: IExpenseListItem[],\r\n  request: TRequestState,\r\n}\r\n\r\nconst initialState: TStore = {\r\n  expenseList: [],\r\n  request:{\r\n    ...requestStateInitial,\r\n    error: {\r\n      ...requestStateInitial.error,\r\n    }\r\n  }\r\n}\r\n\r\nexport const expenseListFetchReducer = configureFetchReducer(\r\n  {\r\n    actions,\r\n    initialState,\r\n    successStateChange: (state: TStore, payload:[]) => {\r\n      state.expenseList = payload;\r\n      return state;\r\n    }\r\n  }\r\n);\r\n\r\n// =======================================\r\n\r\ninterface TStoreDelete {\r\n  status: number,\r\n  request: TRequestState,\r\n}\r\n\r\nconst initialStateDelete: TStoreDelete = {\r\n  status: 0,\r\n  request:{\r\n    ...requestStateInitial,\r\n    error: {\r\n      ...requestStateInitial.error,\r\n    }\r\n  }\r\n}\r\nexport const expenseListDeleteFetchReducer = configureFetchReducer(\r\n  {\r\n    actions:actionsDelete,\r\n    initialState: initialStateDelete,\r\n    successStateChange: (state: TStoreDelete, payload:any) => {\r\n      state.status = payload.status;\r\n      return state;\r\n    }\r\n  }\r\n);","\r\nimport { combineReducers } from 'redux';\r\nimport { authReducer } from './../components/login/reducers';\r\nimport { expenseItemsListReducer } from './../components/expenseItemsList/reducer';\r\nimport { expenseGroupListReducer } from './../components/expenseGroupList/reducer';\r\nimport { menuReducer } from './../components/layout/reducer';\r\nimport { expenseListFetchReducer } from './../components/expenseList/reducer';\r\n\r\nexport const reducer = combineReducers({\r\n  auth: authReducer,\r\n  expenseItemsList: expenseItemsListReducer,\r\n  expenseGroupList: expenseGroupListReducer,\r\n  menu: menuReducer,\r\n  expenseList: expenseListFetchReducer,\r\n})","import { call, put, takeEvery, all } from 'redux-saga/effects';\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\n\r\nfunction* helloSaga() {\r\n  console.log('Hello Sagas!')\r\n}\r\n\r\nfunction* incrementAsync() {\r\n  yield call(delay, 1000);\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nfunction* watchIncrementAsync() {\r\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    helloSaga(),\r\n    watchIncrementAsync()\r\n  ])\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { reducer } from './reducers';\r\n\r\n\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// export const store = createStore(\r\n//   reducer,\r\n//   applyMiddleware(sagaMiddleware)\r\n// );\r\n\r\n// export const store = createStore(\r\n//   reducer,\r\n//   compose(\r\n//     applyMiddleware(sagaMiddleware),\r\n//     window?.__REDUX_DEVTOOLS_EXTENSION__ && window?.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n// );\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware),\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\n\r\n","const config = {\r\n  //backURL: 'http://localhost:3100/budget',\r\n  backURL: 'https://michael-916310-budget-back.herokuapp.com/budget',\r\n}\r\n\r\nexport default config;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { store } from './store';\r\n\r\ntype TRootState = ReturnType<typeof store.getState>;\r\ntype TAppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<TAppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = useSelector;\r\nexport const appDispatch:TAppDispatch = store.dispatch;\r\n","import config from './config';\r\nimport type { TRequestActions } from './commonTypes';\r\nimport { appDispatch } from './hooks';\r\n\r\nexport function fetchURL(relativePath: string, fetchOptions:{}={}){\r\n  return fetch(config.backURL + relativePath, fetchOptions)\r\n    .then((res)=>{\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(`${res.status}: ${res.statusText}`);\r\n      }\r\n    })\r\n}\r\n\r\nexport function loadURLWithSteps(\r\n    relativePath: string,\r\n    fetchOptions:{}={},\r\n    requestSteps: TRequestActions): void {\r\n\r\n  appDispatch(requestSteps.fetchStart());\r\n  fetch(config.backURL + relativePath, fetchOptions)\r\n    .then((res)=>{\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(`${res.status}: ${res.statusText}`);\r\n      }\r\n    })\r\n    .then((res)=>{\r\n      appDispatch(requestSteps.fetchSuccess(JSON.parse(res)));\r\n    }).catch((err)=>{\r\n      appDispatch(requestSteps.fetchFail({message: err.message}));\r\n    })\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Input, Button, Spin, Result } from 'antd';\r\nimport { ArrowLeftOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './login.module.scss';\r\nimport { checkLogin } from './service';\r\nimport { useAppSelector } from './../../app/hooks';\r\n\r\ntype btnType = {\r\n  display?: string;\r\n  displayIcon?: any;\r\n  value: string;\r\n  action: ((item: btnType)=>void) | (()=>void);\r\n}\r\n\r\n\r\n\r\nexport default function Login(){\r\n  const [value, setValue] = useState('');\r\n\r\n  function handleBtnPress(item:btnType) {\r\n    setValue(`${value}${item.value}`);\r\n  }\r\n\r\n  function backspaceBtnPress() {\r\n    setValue(value.substring(0,value.length-1));\r\n  }\r\n\r\n  const btnArray:btnType[]=[\r\n    {display:'1', value:'1', action:handleBtnPress},\r\n    {display:'2', value:'2', action:handleBtnPress},\r\n    {display:'3', value:'3', action:handleBtnPress},\r\n    {display:'4', value:'4', action:handleBtnPress},\r\n    {display:'5', value:'5', action:handleBtnPress},\r\n    {display:'6', value:'6', action:handleBtnPress},\r\n    {display:'7', value:'7', action:handleBtnPress},\r\n    {display:'8', value:'8', action:handleBtnPress},\r\n    {display:'9', value:'9', action:handleBtnPress},\r\n    {display:'0', value:'0', action:handleBtnPress},\r\n    {displayIcon:<ArrowLeftOutlined/>, value:'backspace', action:backspaceBtnPress},\r\n    {displayIcon:<SendOutlined/>, value:'send', action:()=>{checkLogin(value)}},\r\n  ];\r\n\r\n\r\n  let fetchStart = useAppSelector((state)=>{return state.auth.request.fetchStart});\r\n  let fetchFail = useAppSelector((state)=>{return state.auth.request.fetchFail});\r\n  let errorMessage = useAppSelector((state)=>{return state.auth.request.error.message});\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <section className={styles.container}>\r\n        <article className={styles.warningWrapper}>\r\n          {fetchFail &&\r\n          <Result\r\n            status=\"warning\"\r\n            title={errorMessage}\r\n          />}\r\n        </article>\r\n        <article className={styles.inputControlWrapper}>\r\n          <Input\r\n            readOnly={true}\r\n            className={styles.inputControl}\r\n            value={value}/>\r\n        </article>\r\n        <article className={styles.btnContainer}>\r\n          {\r\n            btnArray.map((item) => (\r\n              <Button\r\n                key = {item.value}\r\n                shape='round'\r\n                onClick = {()=>{item.action(item)}}\r\n                className={styles.btn}\r\n                disabled = { fetchStart }\r\n              >\r\n                {(item.display) ? (item.display) : (item.displayIcon)}\r\n              </Button>\r\n              )\r\n            )\r\n          }\r\n        </article>\r\n      </section>\r\n      {fetchStart && <Spin size=\"large\" className={styles.spinier}/>}\r\n    </main>\r\n  )\r\n}","import { loadURLWithSteps} from './../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function checkLogin( userString: string ): void {\r\n  loadURLWithSteps(\r\n    '/user/check',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({userCode: userString})\r\n    },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { Radio } from 'antd';\r\n\r\nimport { useAppSelector, useAppDispatch } from './../../app/hooks';\r\nimport { TExpenseGroupItem } from './../../app/commonTypes';\r\nimport { actions } from './actions';\r\n\r\nexport function ExpenseGroupList(){\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  let list = useAppSelector((state)=>state.expenseGroupList.expenseGroup);\r\n  list = list.filter((item: TExpenseGroupItem) => !item.obsolete);\r\n  const def = list.filter((item: TExpenseGroupItem) => item.defaultSelection);\r\n\r\n  const selectedExpenseGroup = useAppSelector(( state ) => state.expenseGroupList.selectedGroup)\r\n  if (!selectedExpenseGroup) {\r\n    // При первой загрузку прокинем в стайт дефолтное значение\r\n    if (Array.isArray(def) && def.length > 0) {\r\n      dispatch(\r\n        actions.otherActionCreators.expenseGroupSelectedAC(def[0].id)\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Radio.Group\r\n      size=\"large\"\r\n      optionType=\"button\"\r\n      buttonStyle=\"outline\"\r\n      defaultValue = {((Array.isArray(def) && def.length > 0)? def[0].id:-1)}\r\n      style = {{display:'flex', flexWrap: 'wrap', justifyContent: 'center' }}\r\n      onChange = {(e)=>{\r\n        dispatch(\r\n          actions.otherActionCreators.expenseGroupSelectedAC(e.target.value)\r\n        )\r\n      }}\r\n    >\r\n      {list.map((item: {id: number, name: string}) => (\r\n          <Radio.Button\r\n            key = { item.id } value={item.id}\r\n          >\r\n            { item.name }\r\n        </Radio.Button>\r\n      ))}\r\n    </Radio.Group>\r\n  )\r\n}","import React from 'react';\r\nimport { Radio, Collapse } from 'antd';\r\nimport { useAppSelector, useAppDispatch } from './../../app/hooks';\r\n\r\nimport { TExpenseItem } from '../../app/commonTypes';\r\nimport { actions } from './actions';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction ExpenseItemsList(){\r\n\r\n  const list = useAppSelector((state: any)=>(state.expenseItemsList.expenseList));\r\n  const list1 = list.filter((item: TExpenseItem) => (item.oftenUsed > 0));\r\n  const list2 = list.filter((item: TExpenseItem) => (item.oftenUsed === 0));\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  function renderList(lst:[]){\r\n    return (\r\n      lst.map((item: any)=>{\r\n        return (\r\n          <Radio.Button\r\n            key = { item.id } value={item.id}\r\n            style = {{ margin: '1px', minWidth:'7rem' }}\r\n          >\r\n            { item.name }\r\n          </Radio.Button>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Radio.Group\r\n      //defaultValue=\"1\"\r\n      buttonStyle=\"solid\"\r\n      style = {{ textAlign: 'center', display:'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}\r\n      size=\"large\"\r\n      onChange = {(e)=>{\r\n        dispatch(\r\n          actions.otherActionCreators.expenseItemSelectedAC(e.target.value)\r\n        )\r\n      }}\r\n    >\r\n      {renderList(list1)}\r\n      <Collapse style ={{width:'100%'}}>\r\n        <Panel header=\"другие статьи\" key=\"1\">\r\n          <div style = {{ textAlign: 'center', display:'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n            {renderList(list2)}\r\n          </div>\r\n        </Panel>\r\n      </Collapse>\r\n    </Radio.Group>\r\n  )\r\n}\r\n\r\nexport {ExpenseItemsList};","import React, {useEffect, useState} from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Button, DatePicker, Divider, Input, Alert, Spin } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nimport { ExpenseGroupList } from './../expenseGroupList/expenseGroupList';\r\nimport { ExpenseItemsList } from './../expenseItemsList/expenseItemsList';\r\nimport { useAppSelector } from './../../app/hooks';\r\nimport { isNumeric } from '../../app/commonFN';\r\n\r\nimport { fetchURL } from './../../app/service';\r\n\r\nimport styles from './addExpense.module.scss';\r\n\r\n\r\nfunction AddExpense(){\r\n  const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\n  const selectedExpenseId = useAppSelector(( state ) => state.expenseItemsList.selectedExpense?.id);\r\n  const selectedExpenseName = useAppSelector(( state ) => state.expenseItemsList.selectedExpense?.name);\r\n  const selectedExpenseGroup = useAppSelector(( state ) => state.expenseGroupList.selectedGroup);\r\n\r\n  const [expenseDat, setExpenseDat] = useState(new Date());\r\n  const [expenseSum, setExpenseSum] = useState('');\r\n  const [expenseComment, setExpenseComment] = useState('');\r\n\r\n  const [submitProcess, setSubmitProcess] = useState({\r\n    isStart: false,\r\n    isFail: false,\r\n    isSuccess: false,\r\n    errMessage:'',\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    if (submitProcess.isStart) {\r\n      fetchURL(\r\n        '/expense/add',\r\n         {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({\r\n              expenseGroupId: selectedExpenseGroup.id,\r\n              expenseId: selectedExpenseId,\r\n              expenseSum: expenseSum,\r\n              expenseDate: expenseDat,\r\n              expenseComment: expenseComment\r\n            })\r\n          },\r\n      ).then((res)=>{\r\n        if (res.status>0) {\r\n          setExpenseSum('');\r\n          setExpenseComment('');\r\n          setSubmitProcess({isStart: false, isFail: false, isSuccess: true, errMessage:''});\r\n\r\n        } else {\r\n          setSubmitProcess({isStart: false, isFail: true, isSuccess: false, errMessage:res.message})\r\n        }\r\n      }).catch((err)=>{\r\n        setSubmitProcess({isStart: false, isFail: true, isSuccess: false, errMessage:err.message})\r\n      })\r\n    }\r\n  }, [submitProcess.isStart]);\r\n\r\n  function isOkToSubmit(){\r\n    return (\r\n      !!selectedExpenseGroup &&\r\n      (selectedExpenseGroup.id>0) &&\r\n      !!selectedExpenseId &&\r\n      isNumeric(expenseSum) && (+expenseSum !== 0) && (!!expenseDat)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ExpenseGroupList/>\r\n      <Divider/>\r\n\r\n      <ExpenseItemsList/>\r\n      <Divider/>\r\n\r\n      <DatePicker\r\n        defaultValue={moment(expenseDat, dateFormatList[0])}\r\n        size = \"large\"\r\n        mode = \"date\"\r\n        inputReadOnly = {true}\r\n        format={dateFormatList}\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = { moment(expenseDat, dateFormatList[0]) }\r\n        onChange = {(e) => {\r\n          if (e) {\r\n            setExpenseDat(new Date(e.year(), e.month(), e.date()));\r\n            }\r\n          }\r\n        }\r\n      />\r\n\r\n      <Input\r\n        prefix=\"₽\"\r\n        suffix=\"RUR\"\r\n        placeholder=\"сумма\"\r\n        size = \"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = {expenseSum}\r\n        onChange = {(e)=> {\r\n          const v = e.target.value;\r\n          if (isNumeric(v)) {\r\n            setExpenseSum(v);\r\n          }\r\n        }}\r\n      />\r\n\r\n      <TextArea\r\n        placeholder=\"коментарии\"\r\n        autoSize\r\n        size = \"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = {expenseComment}\r\n        onChange = {(e)=>{\r\n          setExpenseComment(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {submitProcess.isFail &&\r\n        <Alert message={submitProcess.errMessage} type=\"error\" showIcon />}\r\n\r\n      {submitProcess.isSuccess &&\r\n        <Alert message=\"Успешно сохранена\" type=\"success\" showIcon />}\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        icon={<CheckOutlined/>}\r\n        size=\"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        disabled ={!isOkToSubmit() || submitProcess.isStart}\r\n        onClick = {()=>{\r\n          setSubmitProcess({\r\n            isStart: true,\r\n            isFail: false,\r\n            isSuccess: false,\r\n            errMessage:'',\r\n          })\r\n         }}\r\n      >\r\n        { isOkToSubmit()\r\n          ? `${selectedExpenseName} (${selectedExpenseGroup.name}) : ${expenseSum}`\r\n          : ''\r\n        }\r\n      </Button>\r\n\r\n      {submitProcess.isStart &&\r\n        <Spin size=\"large\" className={styles.spinier}/>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {AddExpense};","import React, { useEffect } from 'react';\r\n\r\nimport { Button, Descriptions, Popconfirm } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport { useAppSelector } from './../../app/hooks';\r\nimport { IExpenseListItem } from './reducer';\r\nimport { loadExpenseList } from './service';\r\n\r\nimport styles from './expenseList.module.scss';\r\n\r\nexport function ExpenseList(){\r\n\r\n  const [deleteConfirmIndex, setDeleteConfirmIndex] = React.useState(-1);\r\n\r\n  const list:IExpenseListItem[] = useAppSelector(state=>state.expenseList.expenseList);\r\n\r\n\r\n  useEffect(()=>{\r\n    loadExpenseList();\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n        {list.map((item:IExpenseListItem) => {\r\n            return (\r\n              <section className={styles.itemContainer} key={item.id}>\r\n                <Descriptions\r\n                  bordered\r\n                  column={{ xl: 4, sm: 2, xs: 1 }}\r\n                  size=\"small\"\r\n                  className={styles.description}\r\n                  extra = {\r\n                    <Popconfirm\r\n                      title={`Удалить <${item.expenseName}> на <${item.amount}> рублей за ${item.day} число?`}\r\n                      visible ={item.id===deleteConfirmIndex}\r\n                      cancelText = \"Отменить\"\r\n                      cancelButtonProps = {{size:\"large\"}}\r\n                      okText = \"Да, удалить\"\r\n                      okButtonProps ={{size:\"large\"}}\r\n                      onCancel = {()=>{setDeleteConfirmIndex(-1)}}\r\n                      onConfirm = {()=>{\r\n                        setDeleteConfirmIndex(-1);\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        type=\"primary\"\r\n                        size =\"large\"\r\n                        onClick={()=>{setDeleteConfirmIndex(item.id)} }\r\n                        className = {styles.buttonDelete}\r\n                      >\r\n                        <DeleteOutlined />\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                >\r\n                  <Descriptions.Item label=\"Статья\">{item.expenseName}</Descriptions.Item>\r\n                  <Descriptions.Item label=\"Сумма\">{item.amount}</Descriptions.Item>\r\n                  <Descriptions.Item label=\"Группа\">{item.groupName}</Descriptions.Item>\r\n                  <Descriptions.Item label=\"Дата\">{item.period}-{item.day}</Descriptions.Item>\r\n                  <Descriptions.Item label=\"Описание\" span={2}>{item.description}</Descriptions.Item>\r\n                </Descriptions>\r\n              </section>\r\n            )\r\n        })}\r\n    </>\r\n  )\r\n}","import { loadURLWithSteps } from '../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function loadExpenseList() {\r\n  loadURLWithSteps(\r\n    '/expense/getList',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n    },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { Layout, Menu } from 'antd';\r\nimport { CalendarOutlined, LogoutOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { useAppSelector, useAppDispatch } from './../../app/hooks';\r\nimport { AddExpense } from './../addExpense/addExpense';\r\nimport { ExpenseList } from './../expenseList/expenseList';\r\n\r\nimport { selectMenuAC } from './actions';\r\nimport { actions } from './../login/actions';\r\n\r\nimport styles from './layout.module.scss';\r\n\r\n\r\n\r\nconst {  Header, Content, Footer } = Layout;\r\n\r\nfunction AppLayout()  {\r\n\r\n  const selectedItem = useAppSelector((state)=>state.menu.selectedIndex);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <Menu\r\n          theme=\"dark\" mode=\"horizontal\"\r\n          selectedKeys={[selectedItem]}\r\n          onSelect = {function({ item, key, keyPath, selectedKeys, domEvent }){\r\n            if (key==='1' || key==='2') {\r\n              dispatch(selectMenuAC(key));\r\n            } if (key === '3') {\r\n              dispatch(actions.other.authLogoutAC());\r\n            }\r\n          }}\r\n        >\r\n          <Menu.Item key=\"1\"><PlusOutlined/></Menu.Item>\r\n          <Menu.Item key=\"2\"><CalendarOutlined/></Menu.Item>\r\n          <Menu.Item key=\"3\"><LogoutOutlined/></Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: '0 5px' }}>\r\n        <div className={styles.layout_content}>\r\n          {selectedItem==='1' && <AddExpense/>}\r\n          {selectedItem==='2' && <ExpenseList/>}\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Бюджет расходов</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport {AppLayout as Layout};","import { loadURLWithSteps} from '../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function loadExpenseGroupList() {\r\n  loadURLWithSteps(\r\n    '/references/expenseGroups',\r\n    { method: 'POST' },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}","import { loadURLWithSteps} from '../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function loadExpenseItemsList() {\r\n  loadURLWithSteps(\r\n    '/references/expenseItems',\r\n    { method: 'POST' },\r\n    {...actions.requestStepsAC}\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { loadExpenseItemsList } from './components/expenseItemsList/service';\r\nimport { loadExpenseGroupList } from './components/expenseGroupList/service';\r\nimport Login from './components/login/login';\r\nimport { Layout } from './components/layout/layout';\r\n\r\nfunction App() {\r\n\r\n  const isAuthenticated = useSelector((state:any) => {return state.auth.isAuthenticated})\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && <Layout/>}\r\n      {!isAuthenticated && <Login/>}\r\n    </>\r\n  );\r\n}\r\n\r\nloadExpenseGroupList();\r\nloadExpenseItemsList();\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nimport {store} from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1_ZlM\",\"container\":\"login_container__36LK3\",\"warningWrapper\":\"login_warningWrapper__gzvxY\",\"inputControlWrapper\":\"login_inputControlWrapper__e5JuV\",\"inputControl\":\"login_inputControl__zjzzz\",\"btnContainer\":\"login_btnContainer__wsBcb\",\"btn\":\"login_btn__13-Rj\",\"spinier\":\"login_spinier__1p1pF\"};"],"sourceRoot":""}