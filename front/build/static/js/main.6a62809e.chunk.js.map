{"version":3,"sources":["components/login/login.module.scss","reportWebVitals.ts","app/sagas.js","app/store.ts","components/login/login.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","helloSaga","incrementAsync","watchIncrementAsync","rootSaga","delay","ms","Promise","res","setTimeout","console","log","call","put","type","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Login","useState","value","setValue","handleBtnPress","item","btnArray","display","action","displayIcon","ArrowLeftOutlined","substring","length","SendOutlined","className","styles","main","container","inputControlWrapper","readOnly","inputControl","btnContainer","map","shape","onClick","btn","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,oBAAsB,mCAAmC,aAAe,4BAA4B,aAAe,4BAA4B,IAAM,qB,iGCaxNC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gFCLJQ,G,WAIAC,G,WAKAC,G,WAIAC,GAfJC,EAAQ,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAKF,OAEzD,SAAUL,IAAV,iEACES,QAAQC,IAAI,gBADd,uCAIA,SAAUT,IAAV,iEACE,OADF,SACQU,YAAKP,EAAO,KADpB,OAEE,OAFF,SAEQQ,YAAI,CAAEC,KAAM,cAFpB,uCAKA,SAAUX,IAAV,iEACE,OADF,SACQY,YAAU,kBAAmBb,GADrC,uCAIA,SAAUE,IAAV,iEACE,OADF,SACQY,YAAI,CACRf,IACAE,MAHJ,uCAOeC,QCnBTa,EAAiBC,cAEjBC,EAAQC,aACZ,cACAC,YAAgBJ,IAGlBA,EAAeK,IAAIlB,GAKJe,Q,iECDA,SAASI,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,SAASC,EAAeC,GACtBF,EAAS,GAAD,OAAID,GAAJ,OAAYG,EAAKH,QAO3B,IAAMI,EAAmB,CACvB,CAACC,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACG,QAAQ,IAAKL,MAAM,IAAKM,OAAOJ,GAChC,CAACK,YAAY,cAACC,EAAA,EAAD,IAAsBR,MAAM,YAAaM,OAfxD,WACEL,EAASD,EAAMS,UAAU,EAAET,EAAMU,OAAO,MAexC,CAACH,YAAY,cAACI,EAAA,EAAD,IAAiBX,MAAM,OAAQM,OAAO,eAGrD,OACE,sBAAMM,UAAWC,IAAOC,KAAxB,SACE,0BAASF,UAAWC,IAAOE,UAA3B,UACE,yBAASH,UAAWC,IAAOG,oBAA3B,SACE,cAAC,IAAD,CACEC,UAAU,EACVL,UAAWC,IAAOK,aAClBlB,MAAOA,MAEX,yBAASY,UAAWC,IAAOM,aAA3B,SAEIf,EAASgB,KAAI,SAACjB,GAAD,OACT,cAAC,IAAD,CAEAkB,MAAM,QACNC,QAAW,WAAKnB,EAAKG,OAAOH,IAC5BS,UAAWC,IAAOU,IAJlB,SAMEpB,EAAKE,QAAYF,EAAKE,QAAYF,EAAKI,aALlCJ,EAAKH,iBC3CbwB,MARf,WACE,OACE,mCACE,cAAC1B,EAAD,OCKN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJkC,SAASC,eAAe,SAO1B9D,M","file":"static/js/main.6a62809e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1_ZlM\",\"container\":\"login_container__36LK3\",\"inputControlWrapper\":\"login_inputControlWrapper__e5JuV\",\"inputControl\":\"login_inputControl__zjzzz\",\"btnContainer\":\"login_btnContainer__wsBcb\",\"btn\":\"login_btn__13-Rj\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects';\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\n\r\nfunction* helloSaga() {\r\n  console.log('Hello Sagas!')\r\n}\r\n\r\nfunction* incrementAsync() {\r\n  yield call(delay, 1000);\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nfunction* watchIncrementAsync() {\r\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    helloSaga(),\r\n    watchIncrementAsync()\r\n  ])\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  ()=>{},\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Input, Button } from 'antd';\r\nimport { ArrowLeftOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './login.module.scss';\r\nimport {useAppDispatch} from './../../app/hooks';\r\n\r\ntype btnType = {\r\n  display?: string;\r\n  displayIcon?: any;\r\n  value: string;\r\n  action: ((item: btnType)=>void) | (()=>void);\r\n}\r\n\r\n\r\n\r\nexport default function Login(){\r\n  const [value, setValue] = useState('');\r\n\r\n  function handleBtnPress(item:btnType) {\r\n    setValue(`${value}${item.value}`);\r\n  }\r\n\r\n  function backspaceBtnPress() {\r\n    setValue(value.substring(0,value.length-1));\r\n  }\r\n\r\n  const btnArray:btnType[]=[\r\n    {display:'1', value:'1', action:handleBtnPress},\r\n    {display:'2', value:'2', action:handleBtnPress},\r\n    {display:'3', value:'3', action:handleBtnPress},\r\n    {display:'4', value:'4', action:handleBtnPress},\r\n    {display:'5', value:'5', action:handleBtnPress},\r\n    {display:'6', value:'6', action:handleBtnPress},\r\n    {display:'7', value:'7', action:handleBtnPress},\r\n    {display:'8', value:'8', action:handleBtnPress},\r\n    {display:'9', value:'9', action:handleBtnPress},\r\n    {display:'0', value:'0', action:handleBtnPress},\r\n    {displayIcon:<ArrowLeftOutlined/>, value:'backspace', action:backspaceBtnPress},\r\n    {displayIcon:<SendOutlined/>, value:'send', action:()=>{}},\r\n  ];\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <section className={styles.container}>\r\n        <article className={styles.inputControlWrapper}>\r\n          <Input\r\n            readOnly={true}\r\n            className={styles.inputControl}\r\n            value={value}/>\r\n        </article>\r\n        <article className={styles.btnContainer}>\r\n          {\r\n            btnArray.map((item) => (\r\n                <Button\r\n                key = {item.value}\r\n                shape='round'\r\n                onClick = {()=>{item.action(item)}}\r\n                className={styles.btn}\r\n              >\r\n                {(item.display) ? (item.display) : (item.displayIcon)}\r\n              </Button>\r\n              )\r\n            )\r\n          }\r\n        </article>\r\n      </section>\r\n    </main>\r\n  )\r\n}","import React from 'react';\n\nimport Login from './components/login/login';\n\nfunction App() {\n  return (\n    <>\n      <Login/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nimport store from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}