{"version":3,"sources":["reportWebVitals.ts","components/login/actions.ts","components/login/reducers.ts","app/reducers.ts","app/sagas.js","app/store.js","app/config.ts","app/hooks.ts","components/login/service.ts","app/service.ts","components/login/login.tsx","components/layout/layoutDemo.tsx","App.tsx","index.tsx","components/login/login.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AUTH_FETCH_START","AUTH_FETCH_FAIL","AUTH_FETCH_SUCCESS","actions","const","requestStepsAC","fetchStart","type","fetchFail","err","payload","fetchSuccess","fetchedData","userId","userName","isAuthenticated","initialStateAuth","request","error","message","reducer","combineReducers","auth","state","action","clone","setStep","start","fail","success","console","log","helloSaga","incrementAsync","watchIncrementAsync","rootSaga","delay","ms","Promise","res","setTimeout","call","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","config","backURL","useAppSelector","useSelector","appDispatch","dispatch","checkLogin","userString","relativePath","fetchOptions","requestSteps","callBackList","fetch","ok","json","Error","status","statusText","JSON","parse","forEach","element","catch","loadURL","method","headers","body","stringify","userCode","Login","useState","value","setValue","handleBtnPress","item","btnArray","display","displayIcon","ArrowLeftOutlined","substring","length","SendOutlined","errorMessage","className","styles","main","container","warningWrapper","title","inputControlWrapper","readOnly","inputControl","btnContainer","map","shape","onClick","btn","disabled","size","spinier","Header","Layout","Content","Footer","SiderDemo","theme","mode","defaultSelectedKeys","Array","fill","_","index","key","Item","style","padding","textAlign","React","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9b59a961.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type { TRequestActions } from './../../app/common';\r\n\r\nconst AUTH_FETCH_START = 'AUTH_FETCH_START';\r\nconst AUTH_FETCH_FAIL = 'AUTH_FETCH_FAIL';\r\nconst AUTH_FETCH_SUCCESS = 'AUTH_FETCH_SUCCESS';\r\n\r\nexport interface TAuthLoginPayload {\r\n  userId: number|null,\r\n  userName: string|null,\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport interface TAuthLoginAction {\r\n  type: string,\r\n  payload: TAuthLoginPayload | string\r\n}\r\n\r\nfunction authFetchStartAC(){\r\n  return ({\r\n    type: AUTH_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction authFetchFailAC(err: {message: string}){\r\n  return ({\r\n    type: AUTH_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction authFetchSuccessAC( fetchedData: any ) {\r\n  let payload = {};\r\n  if (fetchedData.userId>0) {\r\n    payload = {\r\n      userId: fetchedData.userId,\r\n      userName: fetchedData.userName,\r\n      isAuthenticated: true,\r\n    }\r\n  }\r\n\r\n  return ({\r\n    type: AUTH_FETCH_SUCCESS,\r\n    payload\r\n  })\r\n}\r\n\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n} = {\r\n  const: {\r\n    AUTH_FETCH_START,\r\n    AUTH_FETCH_FAIL,\r\n    AUTH_FETCH_SUCCESS,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: authFetchStartAC,\r\n    fetchFail: authFetchFailAC,\r\n    fetchSuccess: authFetchSuccessAC,\r\n  }\r\n}\r\n","\r\nimport { actions, TAuthLoginPayload, TAuthLoginAction} from './actions';\r\nimport { TRequestState } from './../../app/common';\r\n\r\n\r\ninterface TAuthStore extends TAuthLoginPayload {\r\n  request: TRequestState,\r\n}\r\n\r\nconst initialStateAuth: TAuthStore = {\r\n  userId: null,\r\n  userName: null,\r\n  isAuthenticated: false,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function authReducer(state: TAuthStore = initialStateAuth, action: any ):TAuthStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: {...state.request.error}\r\n    },\r\n  };\r\n\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.userId = null;\r\n      clone.userName = null;\r\n      clone.isAuthenticated = false;\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case actions.const.AUTH_FETCH_START: {\r\n      setStep(true, false, false);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n\r\n      clone.request.error = {message: action.payload.message};\r\n      console.log(clone);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n\r\n      clone.userId = (action.payload.isAuthenticated) ? action.payload.userId: null;\r\n      clone.userName = (action.payload.isAuthenticated) ? action.payload.userName: null;\r\n      clone.isAuthenticated = action.payload?.isAuthenticated || false;\r\n\r\n      return clone;\r\n    }\r\n    default:\r\n\r\n      return clone;\r\n  }\r\n}\r\n","\r\nimport { combineReducers } from 'redux';\r\nimport { authReducer } from './../components/login/reducers';\r\n\r\nexport const reducer = combineReducers({\r\n  auth: authReducer,\r\n})","import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects';\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\n\r\nfunction* helloSaga() {\r\n  console.log('Hello Sagas!')\r\n}\r\n\r\nfunction* incrementAsync() {\r\n  yield call(delay, 1000);\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nfunction* watchIncrementAsync() {\r\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    helloSaga(),\r\n    watchIncrementAsync()\r\n  ])\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reducer } from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\n// export const store = createStore(\r\n//   reducer,\r\n//   compose(\r\n//     applyMiddleware(sagaMiddleware),\r\n//     window?.__REDUX_DEVTOOLS_EXTENSION__ && window?.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n// );\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\n\r\n","const config = {\r\n  //backURL: 'http://localhost:3100/budget',\r\n  backURL: 'https://michael-916310-budget-back.herokuapp.com/budget',\r\n}\r\n\r\nexport default config;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { store } from './store';\r\n\r\ntype TRootState = ReturnType<typeof store.getState>;\r\ntype TAppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<TAppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = useSelector;\r\nexport const appDispatch:TAppDispatch = store.dispatch;\r\n","import { loadURL} from './../../app/service';\r\nimport { appDispatch } from './../../app/hooks';\r\nimport { actions } from './actions';\r\n\r\nexport function checkLogin( userString: string ): void {\r\n  loadURL(\r\n    '/user/check',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({userCode: userString})\r\n    },\r\n    {...actions.requestStepsAC},\r\n    []\r\n  );\r\n}","import config from './config';\r\nimport type { TRequestActions } from './common';\r\nimport { appDispatch } from './hooks';\r\n\r\nexport function loadURL(\r\n    relativePath: string,\r\n    fetchOptions:{}={},\r\n    requestSteps: TRequestActions,\r\n    callBackList: ((data: any)=>void)[] ): void {\r\n\r\n  appDispatch(requestSteps.fetchStart());\r\n  fetch(config.backURL + relativePath, fetchOptions)\r\n    .then((res)=>{\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(`${res.status}: ${res.statusText}`);\r\n      }\r\n    })\r\n    .then((res)=>{\r\n      appDispatch(requestSteps.fetchSuccess(JSON.parse(res)));\r\n      callBackList.forEach(element => {\r\n        element(JSON.parse(res));\r\n      });\r\n    }).catch((err)=>{\r\n      appDispatch(requestSteps.fetchFail({message: err.message}));\r\n    })\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Input, Button, Spin, Result } from 'antd';\r\nimport { ArrowLeftOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './login.module.scss';\r\nimport { checkLogin } from './service';\r\nimport { useAppSelector } from './../../app/hooks';\r\n\r\ntype btnType = {\r\n  display?: string;\r\n  displayIcon?: any;\r\n  value: string;\r\n  action: ((item: btnType)=>void) | (()=>void);\r\n}\r\n\r\n\r\n\r\nexport default function Login(){\r\n  const [value, setValue] = useState('');\r\n\r\n  function handleBtnPress(item:btnType) {\r\n    setValue(`${value}${item.value}`);\r\n  }\r\n\r\n  function backspaceBtnPress() {\r\n    setValue(value.substring(0,value.length-1));\r\n  }\r\n\r\n  const btnArray:btnType[]=[\r\n    {display:'1', value:'1', action:handleBtnPress},\r\n    {display:'2', value:'2', action:handleBtnPress},\r\n    {display:'3', value:'3', action:handleBtnPress},\r\n    {display:'4', value:'4', action:handleBtnPress},\r\n    {display:'5', value:'5', action:handleBtnPress},\r\n    {display:'6', value:'6', action:handleBtnPress},\r\n    {display:'7', value:'7', action:handleBtnPress},\r\n    {display:'8', value:'8', action:handleBtnPress},\r\n    {display:'9', value:'9', action:handleBtnPress},\r\n    {display:'0', value:'0', action:handleBtnPress},\r\n    {displayIcon:<ArrowLeftOutlined/>, value:'backspace', action:backspaceBtnPress},\r\n    {displayIcon:<SendOutlined/>, value:'send', action:()=>{checkLogin(value)}},\r\n  ];\r\n\r\n\r\n  let fetchStart = useAppSelector((state)=>{return state.auth.request.fetchStart});\r\n  let fetchFail = useAppSelector((state)=>{return state.auth.request.fetchFail});\r\n  let errorMessage = useAppSelector((state)=>{return state.auth.request.error.message});\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <section className={styles.container}>\r\n        <article className={styles.warningWrapper}>\r\n          {fetchFail &&\r\n          <Result\r\n            status=\"warning\"\r\n            title={errorMessage}\r\n          />}\r\n        </article>\r\n        <article className={styles.inputControlWrapper}>\r\n          <Input\r\n            readOnly={true}\r\n            className={styles.inputControl}\r\n            value={value}/>\r\n        </article>\r\n        <article className={styles.btnContainer}>\r\n          {\r\n            btnArray.map((item) => (\r\n              <Button\r\n                key = {item.value}\r\n                shape='round'\r\n                onClick = {()=>{item.action(item)}}\r\n                className={styles.btn}\r\n                disabled = { fetchStart }\r\n              >\r\n                {(item.display) ? (item.display) : (item.displayIcon)}\r\n              </Button>\r\n              )\r\n            )\r\n          }\r\n        </article>\r\n      </section>\r\n      {fetchStart && <Spin size=\"large\" className={styles.spinier}/>}\r\n    </main>\r\n  )\r\n}","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport './layoutDemo.scss';\r\n\r\nconst {  Header, Content, Footer } = Layout;\r\n\r\nexport class SiderDemo extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n            {new Array(15).fill(null).map((_, index) => {\r\n              const key = index + 1;\r\n              return <Menu.Item key={key}>{`nav ${key}`}</Menu.Item>;\r\n            })}\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <div className=\"site-layout-content\">Content</div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Login from './components/login/login';\r\nimport { SiderDemo } from './components/layout/layoutDemo';\r\n\r\nfunction App() {\r\n\r\n  const isAuthenticated = useSelector((state:any) => {return state.auth.isAuthenticated})\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && <SiderDemo/>}\r\n      {!isAuthenticated && <Login/>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nimport {store} from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1_ZlM\",\"container\":\"login_container__36LK3\",\"warningWrapper\":\"login_warningWrapper__gzvxY\",\"inputControlWrapper\":\"login_inputControlWrapper__e5JuV\",\"inputControl\":\"login_inputControl__zjzzz\",\"btnContainer\":\"login_btnContainer__wsBcb\",\"btn\":\"login_btn__13-Rj\",\"spinier\":\"login_spinier__1p1pF\"};"],"sourceRoot":""}