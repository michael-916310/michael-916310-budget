{"version":3,"sources":["components/layout/layout.module.scss","reportWebVitals.ts","components/login/actions.ts","components/login/reducers.ts","components/expenseItemsList/actions.ts","components/expenseItemsList/reducer.ts","app/reducers.ts","app/sagas.js","app/store.js","app/config.ts","app/hooks.ts","app/service.ts","components/login/login.tsx","components/login/service.ts","components/expenseItemsList/expenseItemsList.tsx","app/common.ts","components/addExpense/addExpense.tsx","components/layout/layout.tsx","components/expenseItemsList/service.ts","App.tsx","index.tsx","components/login/login.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AUTH_FETCH_START","AUTH_FETCH_FAIL","AUTH_FETCH_SUCCESS","actions","const","requestStepsAC","fetchStart","type","fetchFail","err","payload","fetchSuccess","fetchedData","userId","userName","isAuthenticated","initialStateAuth","request","error","message","EXPENSE_ITEMS_LIST_FETCH_START","EXPENSE_ITEMS_LIST_FETCH_FAIL","EXPENSE_ITEMS_LIST_FETCH_SUCCESS","EXPENSE_ITEM_SELECTED","itemsArray","otherActionCreators","expenseItemSelectedAC","id","selectedId","initialState","expenseList","selectedExpense","reducer","combineReducers","auth","state","action","clone","setStep","start","fail","success","console","log","expenseItemsList","name","filter","item","helloSaga","incrementAsync","watchIncrementAsync","rootSaga","delay","ms","Promise","res","setTimeout","call","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","config","backURL","useAppSelector","useSelector","appDispatch","dispatch","loadURL","relativePath","fetchOptions","requestSteps","callBackList","fetch","ok","json","Error","status","statusText","JSON","parse","forEach","element","catch","Login","useState","value","setValue","handleBtnPress","btnArray","display","displayIcon","ArrowLeftOutlined","substring","length","SendOutlined","userString","method","headers","body","stringify","userCode","errorMessage","className","styles","main","container","warningWrapper","title","inputControlWrapper","readOnly","inputControl","btnContainer","map","shape","onClick","btn","disabled","size","spinier","Panel","Collapse","ExpenseItemsList","list","list1","oftenUsed","list2","useDispatch","renderList","lst","Button","style","margin","minWidth","Group","defaultValue","buttonStyle","textAlign","flexWrap","justifyContent","onChange","e","target","width","header","isNumeric","n","isNaN","parseFloat","isFinite","AddExpense","dateFormatList","selectedExpenseId","selectedExpenseName","expenseSum","setExpenseSum","Date","expenseDat","setExpenseDat","isOk","moment","mode","inputReadOnly","format","year","month","date","prefix","suffix","placeholder","v","autoSize","icon","CheckOutlined","Header","Layout","Content","Footer","AppLayout","theme","defaultSelectedKeys","Item","PlusOutlined","CalendarOutlined","LogoutOutlined","padding","layout_content","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.438edaf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout_content\":\"layout_layout_content__2Nu44\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import type { TRequestActions } from './../../app/common';\r\n\r\nconst AUTH_FETCH_START = 'AUTH_FETCH_START';\r\nconst AUTH_FETCH_FAIL = 'AUTH_FETCH_FAIL';\r\nconst AUTH_FETCH_SUCCESS = 'AUTH_FETCH_SUCCESS';\r\n\r\nexport interface TAuthLoginPayload {\r\n  userId: number|null,\r\n  userName: string|null,\r\n  isAuthenticated: boolean\r\n}\r\n\r\nexport interface TAuthLoginAction {\r\n  type: string,\r\n  payload: TAuthLoginPayload | string\r\n}\r\n\r\nfunction authFetchStartAC(){\r\n  return ({\r\n    type: AUTH_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction authFetchFailAC(err: {message: string}){\r\n  return ({\r\n    type: AUTH_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction authFetchSuccessAC( fetchedData: any ) {\r\n  let payload = {};\r\n  if (fetchedData.userId>0) {\r\n    payload = {\r\n      userId: fetchedData.userId,\r\n      userName: fetchedData.userName,\r\n      isAuthenticated: true,\r\n    }\r\n  }\r\n\r\n  return ({\r\n    type: AUTH_FETCH_SUCCESS,\r\n    payload\r\n  })\r\n}\r\n\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n} = {\r\n  const: {\r\n    AUTH_FETCH_START,\r\n    AUTH_FETCH_FAIL,\r\n    AUTH_FETCH_SUCCESS,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: authFetchStartAC,\r\n    fetchFail: authFetchFailAC,\r\n    fetchSuccess: authFetchSuccessAC,\r\n  }\r\n}\r\n","\r\nimport { actions, TAuthLoginPayload, TAuthLoginAction} from './actions';\r\nimport { TRequestState } from './../../app/common';\r\n\r\n\r\ninterface TAuthStore extends TAuthLoginPayload {\r\n  request: TRequestState,\r\n}\r\n\r\nconst initialStateAuth: TAuthStore = {\r\n  userId: null,\r\n  userName: null,\r\n  isAuthenticated: false,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function authReducer(state: TAuthStore = initialStateAuth, action: any ):TAuthStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: {...state.request.error}\r\n    },\r\n  };\r\n\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.userId = null;\r\n      clone.userName = null;\r\n      clone.isAuthenticated = false;\r\n    }\r\n  }\r\n\r\n  switch (action.type) {\r\n    case actions.const.AUTH_FETCH_START: {\r\n      setStep(true, false, false);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n\r\n      clone.request.error = {message: action.payload.message};\r\n      console.log(clone);\r\n\r\n      return clone;\r\n    }\r\n    case actions.const.AUTH_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n\r\n      clone.userId = (action.payload.isAuthenticated) ? action.payload.userId: null;\r\n      clone.userName = (action.payload.isAuthenticated) ? action.payload.userName: null;\r\n      clone.isAuthenticated = action.payload?.isAuthenticated || false;\r\n\r\n      return clone;\r\n    }\r\n    default:\r\n\r\n      //return clone;\r\n      return state;\r\n  }\r\n}\r\n","import type { TRequestActions } from '../../app/common';\r\n\r\nconst EXPENSE_ITEMS_LIST_FETCH_START = 'EXPENSE_ITEMS_LIST_FETCH_START';\r\nconst EXPENSE_ITEMS_LIST_FETCH_FAIL = 'EXPENSE_ITEMS_LIST_FETCH_FAIL';\r\nconst EXPENSE_ITEMS_LIST_FETCH_SUCCESS = 'EXPENSE_ITEMS_LIST_FETCH_SUCCESS';\r\nconst EXPENSE_ITEM_SELECTED = 'EXPENSE_ITEM_SELECTED';\r\n\r\nfunction fetchStartAC(){\r\n  return ({\r\n    type: EXPENSE_ITEMS_LIST_FETCH_START,\r\n  })\r\n}\r\n\r\nfunction fetchFailAC( err: { message: string }) {\r\n  return ({\r\n    type: EXPENSE_ITEMS_LIST_FETCH_FAIL,\r\n    payload: err,\r\n  })\r\n}\r\n\r\nfunction fetchSuccessAC( fetchedData: any ){\r\n  return {\r\n    type: EXPENSE_ITEMS_LIST_FETCH_SUCCESS,\r\n    payload: {\r\n      itemsArray: fetchedData,\r\n    }\r\n  }\r\n}\r\n\r\nfunction expenseItemSelectedAC(id: number){\r\n  return {\r\n    type: EXPENSE_ITEM_SELECTED,\r\n    payload: {\r\n      selectedId: id,\r\n    }\r\n  }\r\n}\r\n\r\nexport const actions: {\r\n  const: any,\r\n  requestStepsAC: TRequestActions,\r\n  otherActionCreators: any,\r\n} = {\r\n  const: {\r\n    EXPENSE_ITEMS_LIST_FETCH_START,\r\n    EXPENSE_ITEMS_LIST_FETCH_FAIL,\r\n    EXPENSE_ITEMS_LIST_FETCH_SUCCESS,\r\n    EXPENSE_ITEM_SELECTED,\r\n  },\r\n  requestStepsAC: {\r\n    fetchStart: fetchStartAC,\r\n    fetchFail: fetchFailAC,\r\n    fetchSuccess: fetchSuccessAC,\r\n  },\r\n  otherActionCreators: {\r\n    expenseItemSelectedAC,\r\n  }\r\n}","import { actions } from './actions';\r\nimport { TRequestState, TExpenseItem } from './../../app/common';\r\n\r\ninterface TStore {\r\n  expenseList: TExpenseItem [],\r\n  selectedExpense: {\r\n    id: number,\r\n    name: string,\r\n  } | null\r\n  request: TRequestState\r\n}\r\n\r\nconst initialState: TStore = {\r\n  expenseList: [],\r\n  selectedExpense: null,\r\n  request: {\r\n    fetchStart: false,\r\n    fetchFail: false,\r\n    error: {\r\n      message: '',\r\n    },\r\n    fetchSuccess: false,\r\n  }\r\n}\r\n\r\nexport function expenseItemsListReducer(state: TStore = initialState, action: any):TStore {\r\n  const clone = {\r\n    ...state,\r\n    request: {\r\n      ...state.request,\r\n      error: { ...state.request.error }\r\n    },\r\n  };\r\n\r\n  function setStep(start: boolean, fail: boolean, success: boolean) {\r\n    clone.request.fetchStart = start;\r\n    clone.request.fetchFail = fail;\r\n    clone.request.fetchSuccess = success;\r\n    if (!fail) {\r\n      clone.request.error = {\r\n        message: '',\r\n      }\r\n    }\r\n    if (start) {\r\n      clone.expenseList = [];\r\n    }\r\n  }\r\n\r\n  switch(action.type) {\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_START: {\r\n      setStep(true, false, false);\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_FAIL: {\r\n      setStep(false, true, false);\r\n      clone.request.error = { message: action.payload.message }\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEMS_LIST_FETCH_SUCCESS: {\r\n      setStep(false, false, true);\r\n      clone.expenseList = [...action.payload.itemsArray];\r\n      return clone;\r\n    }\r\n    case actions.const.EXPENSE_ITEM_SELECTED: {\r\n      clone.selectedExpense = {\r\n        id: action.payload.selectedId,\r\n        name: clone.expenseList.filter((item)=>item.id===action.payload.selectedId)[0].name,\r\n      }\r\n      return clone;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\nimport { combineReducers } from 'redux';\r\nimport { authReducer } from './../components/login/reducers';\r\nimport { expenseItemsListReducer } from './../components/expenseItemsList/reducer';\r\n\r\nexport const reducer = combineReducers({\r\n  auth: authReducer,\r\n  expenseItemsList: expenseItemsListReducer,\r\n})","import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects';\r\n\r\nconst delay = (ms) => new Promise(res => setTimeout(res, ms))\r\n\r\nfunction* helloSaga() {\r\n  console.log('Hello Sagas!')\r\n}\r\n\r\nfunction* incrementAsync() {\r\n  yield call(delay, 1000);\r\n  yield put({ type: 'INCREMENT' })\r\n}\r\n\r\nfunction* watchIncrementAsync() {\r\n  yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    helloSaga(),\r\n    watchIncrementAsync()\r\n  ])\r\n}\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { reducer } from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\n// export const store = createStore(\r\n//   reducer,\r\n//   compose(\r\n//     applyMiddleware(sagaMiddleware),\r\n//     window?.__REDUX_DEVTOOLS_EXTENSION__ && window?.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n// );\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\n\r\n","const config = {\r\n  // backURL: 'http://localhost:3100/budget',\r\n  backURL: 'https://michael-916310-budget-back.herokuapp.com/budget',\r\n}\r\n\r\nexport default config;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { store } from './store';\r\n\r\ntype TRootState = ReturnType<typeof store.getState>;\r\ntype TAppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<TAppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<TRootState> = useSelector;\r\nexport const appDispatch:TAppDispatch = store.dispatch;\r\n","import config from './config';\r\nimport type { TRequestActions } from './common';\r\nimport { appDispatch } from './hooks';\r\n\r\nexport function loadURL(\r\n    relativePath: string,\r\n    fetchOptions:{}={},\r\n    requestSteps: TRequestActions,\r\n    callBackList: ((data: any)=>void)[] ): void {\r\n\r\n  appDispatch(requestSteps.fetchStart());\r\n  fetch(config.backURL + relativePath, fetchOptions)\r\n    .then((res)=>{\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        throw new Error(`${res.status}: ${res.statusText}`);\r\n      }\r\n    })\r\n    .then((res)=>{\r\n      appDispatch(requestSteps.fetchSuccess(JSON.parse(res)));\r\n      callBackList.forEach(element => {\r\n        element(JSON.parse(res));\r\n      });\r\n    }).catch((err)=>{\r\n      appDispatch(requestSteps.fetchFail({message: err.message}));\r\n    })\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Input, Button, Spin, Result } from 'antd';\r\nimport { ArrowLeftOutlined, SendOutlined } from '@ant-design/icons';\r\n\r\nimport styles from './login.module.scss';\r\nimport { checkLogin } from './service';\r\nimport { useAppSelector } from './../../app/hooks';\r\n\r\ntype btnType = {\r\n  display?: string;\r\n  displayIcon?: any;\r\n  value: string;\r\n  action: ((item: btnType)=>void) | (()=>void);\r\n}\r\n\r\n\r\n\r\nexport default function Login(){\r\n  const [value, setValue] = useState('');\r\n\r\n  function handleBtnPress(item:btnType) {\r\n    setValue(`${value}${item.value}`);\r\n  }\r\n\r\n  function backspaceBtnPress() {\r\n    setValue(value.substring(0,value.length-1));\r\n  }\r\n\r\n  const btnArray:btnType[]=[\r\n    {display:'1', value:'1', action:handleBtnPress},\r\n    {display:'2', value:'2', action:handleBtnPress},\r\n    {display:'3', value:'3', action:handleBtnPress},\r\n    {display:'4', value:'4', action:handleBtnPress},\r\n    {display:'5', value:'5', action:handleBtnPress},\r\n    {display:'6', value:'6', action:handleBtnPress},\r\n    {display:'7', value:'7', action:handleBtnPress},\r\n    {display:'8', value:'8', action:handleBtnPress},\r\n    {display:'9', value:'9', action:handleBtnPress},\r\n    {display:'0', value:'0', action:handleBtnPress},\r\n    {displayIcon:<ArrowLeftOutlined/>, value:'backspace', action:backspaceBtnPress},\r\n    {displayIcon:<SendOutlined/>, value:'send', action:()=>{checkLogin(value)}},\r\n  ];\r\n\r\n\r\n  let fetchStart = useAppSelector((state)=>{return state.auth.request.fetchStart});\r\n  let fetchFail = useAppSelector((state)=>{return state.auth.request.fetchFail});\r\n  let errorMessage = useAppSelector((state)=>{return state.auth.request.error.message});\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <section className={styles.container}>\r\n        <article className={styles.warningWrapper}>\r\n          {fetchFail &&\r\n          <Result\r\n            status=\"warning\"\r\n            title={errorMessage}\r\n          />}\r\n        </article>\r\n        <article className={styles.inputControlWrapper}>\r\n          <Input\r\n            readOnly={true}\r\n            className={styles.inputControl}\r\n            value={value}/>\r\n        </article>\r\n        <article className={styles.btnContainer}>\r\n          {\r\n            btnArray.map((item) => (\r\n              <Button\r\n                key = {item.value}\r\n                shape='round'\r\n                onClick = {()=>{item.action(item)}}\r\n                className={styles.btn}\r\n                disabled = { fetchStart }\r\n              >\r\n                {(item.display) ? (item.display) : (item.displayIcon)}\r\n              </Button>\r\n              )\r\n            )\r\n          }\r\n        </article>\r\n      </section>\r\n      {fetchStart && <Spin size=\"large\" className={styles.spinier}/>}\r\n    </main>\r\n  )\r\n}","import { loadURL} from './../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function checkLogin( userString: string ): void {\r\n  loadURL(\r\n    '/user/check',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify({userCode: userString})\r\n    },\r\n    {...actions.requestStepsAC},\r\n    []\r\n  );\r\n}","import React from 'react';\r\nimport { Radio, Collapse } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport { useAppSelector, useAppDispatch } from './../../app/hooks';\r\n\r\nimport { TExpenseItem } from './../../app/common';\r\nimport { actions } from './actions';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction ExpenseItemsList(){\r\n\r\n  const list = useAppSelector((state: any)=>(state.expenseItemsList.expenseList));\r\n  const list1 = list.filter((item: TExpenseItem) => (item.oftenUsed > 0));\r\n  const list2 = list.filter((item: TExpenseItem) => (item.oftenUsed === 0));\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  function renderList(lst:[]){\r\n    return (\r\n      lst.map((item: any)=>{\r\n        return (\r\n          <Radio.Button\r\n            key = { item.id } value={item.id}\r\n            style = {{ margin: '1px', minWidth:'7rem' }}\r\n          >\r\n            { item.name }\r\n          </Radio.Button>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Radio.Group\r\n      defaultValue=\"1\"\r\n      buttonStyle=\"solid\"\r\n      style = {{ textAlign: 'center', display:'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}\r\n      size=\"large\"\r\n      onChange = {(e)=>{\r\n        dispatch(\r\n          actions.otherActionCreators.expenseItemSelectedAC(e.target.value)\r\n        )\r\n      }}\r\n    >\r\n      {renderList(list1)}\r\n      <Collapse style ={{width:'100%'}}>\r\n        <Panel header=\"другие статьи\" key=\"1\">\r\n          <div style = {{ textAlign: 'center', display:'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n            {renderList(list2)}\r\n          </div>\r\n        </Panel>\r\n      </Collapse>\r\n    </Radio.Group>\r\n  )\r\n}\r\n\r\nexport {ExpenseItemsList};","export interface TRequestState {\r\n  fetchStart: boolean,\r\n  fetchFail: boolean,\r\n  error: {\r\n    message: string\r\n  },\r\n  fetchSuccess: boolean,\r\n}\r\n\r\nexport interface TRequestActions {\r\n  fetchStart: ()=>void,\r\n  fetchFail: (error: {message: string})=>void,\r\n  fetchSuccess: (fetchData: any)=>void,\r\n}\r\n\r\nexport interface TExpenseItem {\r\n  id: number,\r\n  name: string,\r\n  oftenUsed: number,\r\n}\r\n\r\n\r\nexport function isNumeric(n: any) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n","import React, {useState} from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Button, DatePicker, Divider, Input } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nimport { ExpenseItemsList } from './../expenseItemsList/expenseItemsList';\r\nimport { useAppSelector } from './../../app/hooks';\r\nimport { isNumeric } from './../../app/common';\r\n\r\n\r\nfunction AddExpense(){\r\n  const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\n  const selectedExpenseId = useAppSelector(( state ) => state.expenseItemsList.selectedExpense?.id);\r\n  const selectedExpenseName = useAppSelector(( state ) => state.expenseItemsList.selectedExpense?.name);\r\n\r\n  const [expenseSum, setExpenseSum] = useState('');\r\n  const [expenseDat, setExpenseDat] = useState(new Date());\r\n\r\n  function isOk(){\r\n    return (!!selectedExpenseId && isNumeric(expenseSum) && (+expenseSum !== 0) && (!!expenseDat));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ExpenseItemsList/>\r\n\r\n      <Divider/>\r\n\r\n      <DatePicker\r\n        defaultValue={moment(expenseDat, dateFormatList[0])}\r\n        size = \"large\"\r\n        mode = \"date\"\r\n        inputReadOnly = {true}\r\n        format={dateFormatList}\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = { moment(expenseDat, dateFormatList[0]) }\r\n        onChange = {(e) => {\r\n          if (e) {\r\n            setExpenseDat(new Date(e.year(), e.month(), e.date()));\r\n            }\r\n          }\r\n        }\r\n      />\r\n\r\n      <Input\r\n        prefix=\"₽\"\r\n        suffix=\"RUR\"\r\n        placeholder=\"сумма\"\r\n        size = \"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        value = {expenseSum}\r\n        onChange = {(e)=> {\r\n          const v = e.target.value;\r\n          if (isNumeric(v)) {\r\n            setExpenseSum(v);\r\n          }\r\n        }}\r\n      />\r\n\r\n      <TextArea\r\n        placeholder=\"коментарии\"\r\n        autoSize\r\n        size = \"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n      />\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        icon={<CheckOutlined/>}\r\n        size=\"large\"\r\n        style={{width:'100%', margin:'5px 0'}}\r\n        disabled ={!isOk()}\r\n      >\r\n        {\r\n          isOk() ? `${selectedExpenseName} ${expenseSum}` : ''\r\n        }\r\n\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {AddExpense};","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { CalendarOutlined, CheckOutlined, EditOutlined, ExportOutlined, LogoutOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { AddExpense } from './../addExpense/addExpense';\r\nimport styles from './layout.module.scss';\r\n\r\n\r\nconst {  Header, Content, Footer } = Layout;\r\n\r\nfunction AppLayout()  {\r\n\r\n  return (\r\n    <Layout>\r\n      <Header>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\r\n          <Menu.Item key=\"1\"><PlusOutlined/></Menu.Item>\r\n          <Menu.Item key=\"2\"><CalendarOutlined/></Menu.Item>\r\n          <Menu.Item key=\"3\"><LogoutOutlined/></Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: '0 5px' }}>\r\n        <div className={styles.layout_content}>\r\n          <AddExpense/>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Бюджет расходов</Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport {AppLayout as Layout};","import { loadURL} from '../../app/service';\r\nimport { actions } from './actions';\r\n\r\nexport function loadExpenseItemsList() {\r\n  loadURL(\r\n    '/references/expenseItems',\r\n    { method: 'POST' },\r\n    {...actions.requestStepsAC},\r\n    []);\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { loadExpenseItemsList } from './components/expenseItemsList/service';\r\nimport Login from './components/login/login';\r\nimport { Layout } from './components/layout/layout';\r\n\r\nfunction App() {\r\n\r\n  const isAuthenticated = useSelector((state:any) => {return state.auth.isAuthenticated})\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated && <Layout/>}\r\n      {!isAuthenticated && <Login/>}\r\n    </>\r\n  );\r\n}\r\n\r\nloadExpenseItemsList();\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nimport {store} from './app/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1_ZlM\",\"container\":\"login_container__36LK3\",\"warningWrapper\":\"login_warningWrapper__gzvxY\",\"inputControlWrapper\":\"login_inputControlWrapper__e5JuV\",\"inputControl\":\"login_inputControl__zjzzz\",\"btnContainer\":\"login_btnContainer__wsBcb\",\"btn\":\"login_btn__13-Rj\",\"spinier\":\"login_spinier__1p1pF\"};"],"sourceRoot":""}